{
  "contractName": "predictionMarket",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "enum predictionMarket.Side",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "bets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum predictionMarket.Side",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "betsPerUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketFinished",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum predictionMarket.Side",
          "name": "_side",
          "type": "uint8"
        }
      ],
      "name": "placeBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum predictionMarket.Side",
          "name": "_winner",
          "type": "uint8"
        },
        {
          "internalType": "enum predictionMarket.Side",
          "name": "_loser",
          "type": "uint8"
        }
      ],
      "name": "reportResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"enum predictionMarket.Side\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"bets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum predictionMarket.Side\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"betsPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum predictionMarket.Side\",\"name\":\"_side\",\"type\":\"uint8\"}],\"name\":\"placeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum predictionMarket.Side\",\"name\":\"_winner\",\"type\":\"uint8\"},{\"internalType\":\"enum predictionMarket.Side\",\"name\":\"_loser\",\"type\":\"uint8\"}],\"name\":\"reportResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Andor Szegedi\",\"custom:experimental\":\"This is an experimental contract.\",\"details\":\"reportResult to be called manually by contract owner in this version\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"reportResult(uint8,uint8)\":{\"details\":\"owner to be replaced by custom Chainlink Oracle in production\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"FIFA2022 Prediction (Blockchain Developer Bootcamp Final Project)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"placeBet(uint8)\":{\"notice\":\"Will France win FIFA2022? Pick a side and pay more than 0 ETH\"},\"reportResult(uint8,uint8)\":{\"notice\":\"to be called only by the contract owner manually in this version\"}},\"notice\":\"This is a prototype of a FIFA2022 Prediction Market pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/admin/Desktop/blockchain-developer-bootcamp-final-project/contracts/predictionMarket.sol\":\"predictionMarket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/admin/Desktop/blockchain-developer-bootcamp-final-project/contracts/predictionMarket.sol\":{\"keccak256\":\"0xf7d5d3ca15253c9061dc239a7ec77ac785c18e792bd46b914e3a8392fb337167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a08f4e95b8c0c4431fedb9a0afba4fc80db7c37eb38c7504e065353a02dd49\",\"dweb:/ipfs/QmbskchVTFQQDvaKWtfWcAoZhyzuAPhdj7yEyPN76TRS1P\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6116458061010d6000396000f3fe6080604052600436106100865760003560e01c8063806ad85811610059578063806ad858146101245780638da5cb5b1461014f5780639ce409921461017a578063ac307773146101b7578063f2fde38b146101ce57610086565b8063430468441461008b5780634ec942b7146100a7578063715018a6146100d05780637e0ecc00146100e7575b600080fd5b6100a560048036038101906100a09190610ef9565b6101f7565b005b3480156100b357600080fd5b506100ce60048036038101906100c99190610f26565b61036c565b005b3480156100dc57600080fd5b506100e56104b7565b005b3480156100f357600080fd5b5061010e60048036038101906101099190610ef9565b61053f565b60405161011b919061125c565b60405180910390f35b34801561013057600080fd5b50610139610557565b6040516101469190611121565b60405180910390f35b34801561015b57600080fd5b5061016461056a565b6040516101719190611106565b60405180910390f35b34801561018657600080fd5b506101a1600480360381019061019c9190610eb9565b610593565b6040516101ae919061125c565b60405180910390f35b3480156101c357600080fd5b506101cc6105b8565b005b3480156101da57600080fd5b506101f560048036038101906101f09190610e8c565b610c9e565b005b60001515600260009054906101000a900460ff1615151461024d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102449061117c565b60405180910390fd5b60003411610290576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610287906111dc565b60405180910390fd5b34600360008360018111156102a8576102a761141a565b5b60018111156102ba576102b961141a565b5b815260200190815260200160002060008282546102d79190611293565b9250508190555034600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360018111156103335761033261141a565b5b60018111156103455761034461141a565b5b815260200190815260200160002060008282546103629190611293565b9250508190555050565b610374610d96565b73ffffffffffffffffffffffffffffffffffffffff1661039261056a565b73ffffffffffffffffffffffffffffffffffffffff16146103e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103df906111bc565b60405180910390fd5b60001515600260009054906101000a900460ff1615151461043e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104359061115c565b60405180910390fd5b81600160000160006101000a81548160ff021916908360018111156104665761046561141a565b5b021790555080600160000160016101000a81548160ff021916908360018111156104935761049261141a565b5b02179055506001600260006101000a81548160ff0219169083151502179055505050565b6104bf610d96565b73ffffffffffffffffffffffffffffffffffffffff166104dd61056a565b73ffffffffffffffffffffffffffffffffffffffff1614610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052a906111bc565b60405180910390fd5b61053d6000610d9e565b565b60036020528060005260406000206000915090505481565b600260009054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6004602052816000526040600020602052806000526040600020600091509150505481565b60011515600260009054906101000a900460ff1615151461060e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610605906111fc565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001808111156106645761066361141a565b5b60018111156106765761067561141a565b5b815260200190815260200160002054600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060018111156106d9576106d861141a565b5b60018111156106eb576106ea61141a565b5b8152602001908152602001600020546107049190611293565b905060008111610749576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107409061119c565b60405180910390fd5b6000600360008060018111156107625761076161141a565b5b60018111156107745761077361141a565b5b81526020019081526020016000205414806107c657506000600360006001808111156107a3576107a261141a565b5b60018111156107b5576107b461141a565b5b815260200190815260200160002054145b15610971576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060018111156108215761082061141a565b5b60018111156108335761083261141a565b5b8152602001908152602001600020819055506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018081111561089b5761089a61141a565b5b60018111156108ad576108ac61141a565b5b81526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516108e5906110f1565b60006040518083038185875af1925050503d8060008114610922576040519150601f19603f3d011682016040523d82523d6000602084013e610927565b606091505b505090508061096b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109629061121c565b60405180910390fd5b50610c9b565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600160000160009054906101000a900460ff1660018111156109d9576109d861141a565b5b60018111156109eb576109ea61141a565b5b815260200190815260200160002054905060008111610a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a369061123c565b60405180910390fd5b600060036000600160000160009054906101000a900460ff166001811115610a6a57610a6961141a565b5b6001811115610a7c57610a7b61141a565b5b8152602001908152602001600020548260036000600160000160019054906101000a900460ff166001811115610ab557610ab461141a565b5b6001811115610ac757610ac661141a565b5b815260200190815260200160002054610ae0919061131a565b610aea91906112e9565b82610af59190611293565b90506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000806001811115610b4d57610b4c61141a565b5b6001811115610b5f57610b5e61141a565b5b8152602001908152602001600020819055506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600180811115610bc757610bc661141a565b5b6001811115610bd957610bd861141a565b5b81526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610c11906110f1565b60006040518083038185875af1925050503d8060008114610c4e576040519150601f19603f3d011682016040523d82523d6000602084013e610c53565b606091505b5050905080610c97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8e9061121c565b60405180910390fd5b5050505b50565b610ca6610d96565b73ffffffffffffffffffffffffffffffffffffffff16610cc461056a565b73ffffffffffffffffffffffffffffffffffffffff1614610d1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d11906111bc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d819061113c565b60405180910390fd5b610d9381610d9e565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610e71816115e8565b92915050565b600081359050610e86816115ff565b92915050565b600060208284031215610ea257610ea1611449565b5b6000610eb084828501610e62565b91505092915050565b60008060408385031215610ed057610ecf611449565b5b6000610ede85828601610e62565b9250506020610eef85828601610e77565b9150509250929050565b600060208284031215610f0f57610f0e611449565b5b6000610f1d84828501610e77565b91505092915050565b60008060408385031215610f3d57610f3c611449565b5b6000610f4b85828601610e77565b9250506020610f5c85828601610e77565b9150509250929050565b610f6f81611374565b82525050565b610f7e81611386565b82525050565b6000610f91602683611282565b9150610f9c8261144e565b604082019050919050565b6000610fb4601083611282565b9150610fbf8261149d565b602082019050919050565b6000610fd7600e83611282565b9150610fe2826114c6565b602082019050919050565b6000610ffa601183611282565b9150611005826114ef565b602082019050919050565b600061101d602083611282565b915061102882611518565b602082019050919050565b6000611040601483611282565b915061104b82611541565b602082019050919050565b6000611063600083611277565b915061106e8261156a565b600082019050919050565b6000611086601683611282565b91506110918261156d565b602082019050919050565b60006110a9601483611282565b91506110b482611596565b602082019050919050565b60006110cc602083611282565b91506110d7826115bf565b602082019050919050565b6110eb816113b2565b82525050565b60006110fc82611056565b9150819050919050565b600060208201905061111b6000830184610f66565b92915050565b60006020820190506111366000830184610f75565b92915050565b6000602082019050818103600083015261115581610f84565b9050919050565b6000602082019050818103600083015261117581610fa7565b9050919050565b6000602082019050818103600083015261119581610fca565b9050919050565b600060208201905081810360008301526111b581610fed565b9050919050565b600060208201905081810360008301526111d581611010565b9050919050565b600060208201905081810360008301526111f581611033565b9050919050565b6000602082019050818103600083015261121581611079565b9050919050565b600060208201905081810360008301526112358161109c565b9050919050565b60006020820190508181036000830152611255816110bf565b9050919050565b600060208201905061127160008301846110e2565b92915050565b600081905092915050565b600082825260208201905092915050565b600061129e826113b2565b91506112a9836113b2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112de576112dd6113bc565b5b828201905092915050565b60006112f4826113b2565b91506112ff836113b2565b92508261130f5761130e6113eb565b5b828204905092915050565b6000611325826113b2565b9150611330836113b2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611369576113686113bc565b5b828202905092915050565b600061137f82611392565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f616c7265616479207265706f7274656400000000000000000000000000000000600082015250565b7f6d61726b65742065787069726564000000000000000000000000000000000000600082015250565b7f6e6f206465706f7369747320666f756e64000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6d75737420626574206d6f7265207468616e2030000000000000000000000000600082015250565b50565b7f6d61726b6574206e6f7420657870697265642079657400000000000000000000600082015250565b7f6661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b7f796f7520646f206e6f74206861766520616e792077696e6e696e672062657473600082015250565b6115f181611374565b81146115fc57600080fd5b50565b6002811061160c57600080fd5b5056fea264697066735822122036fe86cb2bf461e860cc7be15c4aac52479d510ee86417e351fd39d2bb50a8db64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063806ad85811610059578063806ad858146101245780638da5cb5b1461014f5780639ce409921461017a578063ac307773146101b7578063f2fde38b146101ce57610086565b8063430468441461008b5780634ec942b7146100a7578063715018a6146100d05780637e0ecc00146100e7575b600080fd5b6100a560048036038101906100a09190610ef9565b6101f7565b005b3480156100b357600080fd5b506100ce60048036038101906100c99190610f26565b61036c565b005b3480156100dc57600080fd5b506100e56104b7565b005b3480156100f357600080fd5b5061010e60048036038101906101099190610ef9565b61053f565b60405161011b919061125c565b60405180910390f35b34801561013057600080fd5b50610139610557565b6040516101469190611121565b60405180910390f35b34801561015b57600080fd5b5061016461056a565b6040516101719190611106565b60405180910390f35b34801561018657600080fd5b506101a1600480360381019061019c9190610eb9565b610593565b6040516101ae919061125c565b60405180910390f35b3480156101c357600080fd5b506101cc6105b8565b005b3480156101da57600080fd5b506101f560048036038101906101f09190610e8c565b610c9e565b005b60001515600260009054906101000a900460ff1615151461024d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102449061117c565b60405180910390fd5b60003411610290576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610287906111dc565b60405180910390fd5b34600360008360018111156102a8576102a761141a565b5b60018111156102ba576102b961141a565b5b815260200190815260200160002060008282546102d79190611293565b9250508190555034600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360018111156103335761033261141a565b5b60018111156103455761034461141a565b5b815260200190815260200160002060008282546103629190611293565b9250508190555050565b610374610d96565b73ffffffffffffffffffffffffffffffffffffffff1661039261056a565b73ffffffffffffffffffffffffffffffffffffffff16146103e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103df906111bc565b60405180910390fd5b60001515600260009054906101000a900460ff1615151461043e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104359061115c565b60405180910390fd5b81600160000160006101000a81548160ff021916908360018111156104665761046561141a565b5b021790555080600160000160016101000a81548160ff021916908360018111156104935761049261141a565b5b02179055506001600260006101000a81548160ff0219169083151502179055505050565b6104bf610d96565b73ffffffffffffffffffffffffffffffffffffffff166104dd61056a565b73ffffffffffffffffffffffffffffffffffffffff1614610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052a906111bc565b60405180910390fd5b61053d6000610d9e565b565b60036020528060005260406000206000915090505481565b600260009054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6004602052816000526040600020602052806000526040600020600091509150505481565b60011515600260009054906101000a900460ff1615151461060e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610605906111fc565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001808111156106645761066361141a565b5b60018111156106765761067561141a565b5b815260200190815260200160002054600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060018111156106d9576106d861141a565b5b60018111156106eb576106ea61141a565b5b8152602001908152602001600020546107049190611293565b905060008111610749576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107409061119c565b60405180910390fd5b6000600360008060018111156107625761076161141a565b5b60018111156107745761077361141a565b5b81526020019081526020016000205414806107c657506000600360006001808111156107a3576107a261141a565b5b60018111156107b5576107b461141a565b5b815260200190815260200160002054145b15610971576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060018111156108215761082061141a565b5b60018111156108335761083261141a565b5b8152602001908152602001600020819055506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018081111561089b5761089a61141a565b5b60018111156108ad576108ac61141a565b5b81526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516108e5906110f1565b60006040518083038185875af1925050503d8060008114610922576040519150601f19603f3d011682016040523d82523d6000602084013e610927565b606091505b505090508061096b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109629061121c565b60405180910390fd5b50610c9b565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600160000160009054906101000a900460ff1660018111156109d9576109d861141a565b5b60018111156109eb576109ea61141a565b5b815260200190815260200160002054905060008111610a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a369061123c565b60405180910390fd5b600060036000600160000160009054906101000a900460ff166001811115610a6a57610a6961141a565b5b6001811115610a7c57610a7b61141a565b5b8152602001908152602001600020548260036000600160000160019054906101000a900460ff166001811115610ab557610ab461141a565b5b6001811115610ac757610ac661141a565b5b815260200190815260200160002054610ae0919061131a565b610aea91906112e9565b82610af59190611293565b90506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000806001811115610b4d57610b4c61141a565b5b6001811115610b5f57610b5e61141a565b5b8152602001908152602001600020819055506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600180811115610bc757610bc661141a565b5b6001811115610bd957610bd861141a565b5b81526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610c11906110f1565b60006040518083038185875af1925050503d8060008114610c4e576040519150601f19603f3d011682016040523d82523d6000602084013e610c53565b606091505b5050905080610c97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8e9061121c565b60405180910390fd5b5050505b50565b610ca6610d96565b73ffffffffffffffffffffffffffffffffffffffff16610cc461056a565b73ffffffffffffffffffffffffffffffffffffffff1614610d1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d11906111bc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d819061113c565b60405180910390fd5b610d9381610d9e565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610e71816115e8565b92915050565b600081359050610e86816115ff565b92915050565b600060208284031215610ea257610ea1611449565b5b6000610eb084828501610e62565b91505092915050565b60008060408385031215610ed057610ecf611449565b5b6000610ede85828601610e62565b9250506020610eef85828601610e77565b9150509250929050565b600060208284031215610f0f57610f0e611449565b5b6000610f1d84828501610e77565b91505092915050565b60008060408385031215610f3d57610f3c611449565b5b6000610f4b85828601610e77565b9250506020610f5c85828601610e77565b9150509250929050565b610f6f81611374565b82525050565b610f7e81611386565b82525050565b6000610f91602683611282565b9150610f9c8261144e565b604082019050919050565b6000610fb4601083611282565b9150610fbf8261149d565b602082019050919050565b6000610fd7600e83611282565b9150610fe2826114c6565b602082019050919050565b6000610ffa601183611282565b9150611005826114ef565b602082019050919050565b600061101d602083611282565b915061102882611518565b602082019050919050565b6000611040601483611282565b915061104b82611541565b602082019050919050565b6000611063600083611277565b915061106e8261156a565b600082019050919050565b6000611086601683611282565b91506110918261156d565b602082019050919050565b60006110a9601483611282565b91506110b482611596565b602082019050919050565b60006110cc602083611282565b91506110d7826115bf565b602082019050919050565b6110eb816113b2565b82525050565b60006110fc82611056565b9150819050919050565b600060208201905061111b6000830184610f66565b92915050565b60006020820190506111366000830184610f75565b92915050565b6000602082019050818103600083015261115581610f84565b9050919050565b6000602082019050818103600083015261117581610fa7565b9050919050565b6000602082019050818103600083015261119581610fca565b9050919050565b600060208201905081810360008301526111b581610fed565b9050919050565b600060208201905081810360008301526111d581611010565b9050919050565b600060208201905081810360008301526111f581611033565b9050919050565b6000602082019050818103600083015261121581611079565b9050919050565b600060208201905081810360008301526112358161109c565b9050919050565b60006020820190508181036000830152611255816110bf565b9050919050565b600060208201905061127160008301846110e2565b92915050565b600081905092915050565b600082825260208201905092915050565b600061129e826113b2565b91506112a9836113b2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112de576112dd6113bc565b5b828201905092915050565b60006112f4826113b2565b91506112ff836113b2565b92508261130f5761130e6113eb565b5b828204905092915050565b6000611325826113b2565b9150611330836113b2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611369576113686113bc565b5b828202905092915050565b600061137f82611392565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f616c7265616479207265706f7274656400000000000000000000000000000000600082015250565b7f6d61726b65742065787069726564000000000000000000000000000000000000600082015250565b7f6e6f206465706f7369747320666f756e64000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6d75737420626574206d6f7265207468616e2030000000000000000000000000600082015250565b50565b7f6d61726b6574206e6f7420657870697265642079657400000000000000000000600082015250565b7f6661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b7f796f7520646f206e6f74206861766520616e792077696e6e696e672062657473600082015250565b6115f181611374565b81146115fc57600080fd5b50565b6002811061160c57600080fd5b5056fea264697066735822122036fe86cb2bf461e860cc7be15c4aac52479d510ee86417e351fd39d2bb50a8db64736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15485:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:4",
                "type": ""
              }
            ],
            "src": "7:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "211:94:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "221:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "243:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "230:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "230:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "221:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "293:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_Side_$41",
                      "nodeType": "YulIdentifier",
                      "src": "259:33:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "259:40:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "259:40:4"
                }
              ]
            },
            "name": "abi_decode_t_enum$_Side_$41",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "189:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "197:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "205:5:4",
                "type": ""
              }
            ],
            "src": "152:153:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "377:263:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "423:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "425:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "425:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "425:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "398:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "407:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "394:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "394:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "419:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "390:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "387:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "516:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "531:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "545:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "535:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "560:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "595:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "606:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "591:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "591:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "615:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "570:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "570:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "560:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "347:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "358:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "370:6:4",
                "type": ""
              }
            ],
            "src": "311:329:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "736:398:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "782:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "784:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "784:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "784:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "757:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "766:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "753:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "753:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "778:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "749:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "749:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "746:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "875:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "890:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "904:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "894:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "919:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "954:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "965:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "950:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "950:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "974:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "929:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "929:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "919:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1002:125:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1017:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1031:2:4",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1021:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1047:70:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1089:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1100:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1085:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1085:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1109:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Side_$41",
                          "nodeType": "YulIdentifier",
                          "src": "1057:27:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1057:60:4"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1047:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_enum$_Side_$41",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "698:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "709:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "721:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "729:6:4",
                "type": ""
              }
            ],
            "src": "646:488:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1213:270:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1259:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1261:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1261:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1261:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1234:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1243:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1230:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1230:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1255:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1226:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1226:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1223:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1352:124:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1367:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1381:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1371:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1396:70:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1438:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1449:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1434:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1434:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1458:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Side_$41",
                          "nodeType": "YulIdentifier",
                          "src": "1406:27:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1406:60:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1396:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_Side_$41",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1183:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1194:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1206:6:4",
                "type": ""
              }
            ],
            "src": "1140:343:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1586:405:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1632:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1634:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1634:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1634:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1607:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1616:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1603:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1603:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1628:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1599:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1599:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1596:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1725:124:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1740:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1754:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1744:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1769:70:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1811:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1822:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1807:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1807:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1831:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Side_$41",
                          "nodeType": "YulIdentifier",
                          "src": "1779:27:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1779:60:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1769:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1859:125:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1874:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1888:2:4",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1878:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1904:70:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1946:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1957:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1942:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1942:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1966:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Side_$41",
                          "nodeType": "YulIdentifier",
                          "src": "1914:27:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1914:60:4"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1904:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_Side_$41t_enum$_Side_$41",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1548:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1559:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1571:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1579:6:4",
                "type": ""
              }
            ],
            "src": "1489:502:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2062:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2079:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2102:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2084:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2084:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2072:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2072:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2072:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2050:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2057:3:4",
                "type": ""
              }
            ],
            "src": "1997:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2180:50:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2197:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2217:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2202:14:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2202:21:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2190:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2190:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2190:34:4"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2168:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2175:3:4",
                "type": ""
              }
            ],
            "src": "2121:109:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2382:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2392:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2458:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2463:2:4",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2399:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2399:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2392:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2564:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "2475:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2475:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2475:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2577:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2588:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2593:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2584:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2584:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2577:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2370:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2378:3:4",
                "type": ""
              }
            ],
            "src": "2236:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2754:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2764:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2830:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2835:2:4",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2771:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2771:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2764:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2936:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4ca0b7842c579c4d78e5b1bc012525bf0c6393ad7394b6d6a3b67bbec8311fab",
                      "nodeType": "YulIdentifier",
                      "src": "2847:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2847:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2847:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2949:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2960:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2965:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2956:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2956:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2949:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4ca0b7842c579c4d78e5b1bc012525bf0c6393ad7394b6d6a3b67bbec8311fab_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2742:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2750:3:4",
                "type": ""
              }
            ],
            "src": "2608:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3126:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3136:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3202:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3207:2:4",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3143:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3143:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3136:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3308:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4ed068c4afe5699ff2c7dbaeda7e17a2a9fc26997df767eb5d68c7d89198e468",
                      "nodeType": "YulIdentifier",
                      "src": "3219:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3219:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3219:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3321:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3332:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3337:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3328:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3328:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3321:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4ed068c4afe5699ff2c7dbaeda7e17a2a9fc26997df767eb5d68c7d89198e468_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3114:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3122:3:4",
                "type": ""
              }
            ],
            "src": "2980:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3498:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3508:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3574:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3579:2:4",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3515:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3515:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3508:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3680:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6311d0734ec7a7059362bdbec9ff187aae2080531c1e454f15110b629d0bd770",
                      "nodeType": "YulIdentifier",
                      "src": "3591:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3591:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3591:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3693:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3704:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3709:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3700:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3700:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3693:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6311d0734ec7a7059362bdbec9ff187aae2080531c1e454f15110b629d0bd770_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3486:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3494:3:4",
                "type": ""
              }
            ],
            "src": "3352:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3870:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3880:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3946:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3951:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3887:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3887:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3880:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4052:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "3963:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3963:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3963:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4065:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4076:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4081:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4072:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4072:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4065:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3858:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3866:3:4",
                "type": ""
              }
            ],
            "src": "3724:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4242:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4252:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4318:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4323:2:4",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4259:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4259:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4252:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4424:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b2bd8eda2058edeae4f021021be0bdc3596a7a84a0e082f633598d4bbfb39aae",
                      "nodeType": "YulIdentifier",
                      "src": "4335:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4335:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4335:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4437:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4448:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4453:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4444:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4444:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4437:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b2bd8eda2058edeae4f021021be0bdc3596a7a84a0e082f633598d4bbfb39aae_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4230:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4238:3:4",
                "type": ""
              }
            ],
            "src": "4096:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4631:235:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4641:90:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4724:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4729:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4648:75:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4648:83:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4641:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4829:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "nodeType": "YulIdentifier",
                      "src": "4740:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4740:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4740:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4842:18:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4853:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4858:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4849:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4849:11:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4842:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4619:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4627:3:4",
                "type": ""
              }
            ],
            "src": "4468:398:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5018:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5028:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5094:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5099:2:4",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5035:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5035:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5028:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5200:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_de1b0cefc4174dafa7044dd1e3d617507cb1ee4d45a15c48107e435d4521fa61",
                      "nodeType": "YulIdentifier",
                      "src": "5111:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5111:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5111:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5213:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5224:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5229:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5220:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5220:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5213:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_de1b0cefc4174dafa7044dd1e3d617507cb1ee4d45a15c48107e435d4521fa61_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5006:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5014:3:4",
                "type": ""
              }
            ],
            "src": "4872:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5390:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5400:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5466:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5471:2:4",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5407:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5407:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5400:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5572:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b",
                      "nodeType": "YulIdentifier",
                      "src": "5483:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5483:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5483:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5585:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5596:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5601:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5592:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5592:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5585:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5378:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5386:3:4",
                "type": ""
              }
            ],
            "src": "5244:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5762:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5772:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5838:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5843:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5779:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5779:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5772:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5944:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e959e94bdf7aa44c2d7d3ac9cde88f3583f9c698ccf2fa283f583365cc9d558b",
                      "nodeType": "YulIdentifier",
                      "src": "5855:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5855:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5855:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5957:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5968:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5973:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5964:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5964:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5957:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e959e94bdf7aa44c2d7d3ac9cde88f3583f9c698ccf2fa283f583365cc9d558b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5750:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5758:3:4",
                "type": ""
              }
            ],
            "src": "5616:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6053:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6070:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6093:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6075:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6075:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6063:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6063:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6063:37:4"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6041:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6048:3:4",
                "type": ""
              }
            ],
            "src": "5988:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6300:191:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6311:154:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6461:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6318:141:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6318:147:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6311:3:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6475:10:4",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "6482:3:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6475:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6287:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6296:3:4",
                "type": ""
              }
            ],
            "src": "6112:379:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6595:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6605:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6617:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6628:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6613:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6613:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6605:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6685:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6698:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6709:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6694:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6694:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6641:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6641:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6641:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6567:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6579:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6590:4:4",
                "type": ""
              }
            ],
            "src": "6497:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6817:118:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6827:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6839:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6850:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6835:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6835:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6827:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6901:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6914:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6925:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6910:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6910:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6863:37:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6863:65:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6863:65:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6789:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6801:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6812:4:4",
                "type": ""
              }
            ],
            "src": "6725:210:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7112:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7122:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7134:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7145:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7130:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7130:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7122:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7169:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7180:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7165:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7165:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7188:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7194:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7184:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7184:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7158:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7158:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7158:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7214:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7348:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7222:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7222:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7214:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7092:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7107:4:4",
                "type": ""
              }
            ],
            "src": "6941:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7537:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7547:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7559:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7570:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7555:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7555:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7547:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7594:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7605:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7590:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7590:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7613:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7619:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7609:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7609:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7583:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7583:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7583:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7639:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7773:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4ca0b7842c579c4d78e5b1bc012525bf0c6393ad7394b6d6a3b67bbec8311fab_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7647:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7647:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7639:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4ca0b7842c579c4d78e5b1bc012525bf0c6393ad7394b6d6a3b67bbec8311fab__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7517:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7532:4:4",
                "type": ""
              }
            ],
            "src": "7366:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7962:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7972:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7984:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7995:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7980:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7980:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7972:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8019:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8030:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8015:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8015:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8038:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8044:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8034:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8034:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8008:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8008:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8008:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8064:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8198:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4ed068c4afe5699ff2c7dbaeda7e17a2a9fc26997df767eb5d68c7d89198e468_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8072:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8072:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8064:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4ed068c4afe5699ff2c7dbaeda7e17a2a9fc26997df767eb5d68c7d89198e468__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7942:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7957:4:4",
                "type": ""
              }
            ],
            "src": "7791:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8387:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8397:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8409:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8420:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8405:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8405:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8397:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8444:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8455:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8440:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8440:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8463:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8469:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8459:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8459:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8433:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8433:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8433:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8489:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8623:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6311d0734ec7a7059362bdbec9ff187aae2080531c1e454f15110b629d0bd770_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8497:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8497:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8489:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6311d0734ec7a7059362bdbec9ff187aae2080531c1e454f15110b629d0bd770__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8367:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8382:4:4",
                "type": ""
              }
            ],
            "src": "8216:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8812:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8822:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8834:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8845:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8830:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8830:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8822:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8869:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8880:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8865:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8865:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8888:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8894:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8884:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8884:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8858:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8858:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8858:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8914:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9048:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8922:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8922:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8914:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8792:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8807:4:4",
                "type": ""
              }
            ],
            "src": "8641:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9237:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9247:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9259:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9270:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9255:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9255:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9247:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9294:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9305:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9290:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9290:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9313:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9319:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9309:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9309:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9283:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9283:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9283:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9339:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9473:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b2bd8eda2058edeae4f021021be0bdc3596a7a84a0e082f633598d4bbfb39aae_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9347:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9347:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9339:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b2bd8eda2058edeae4f021021be0bdc3596a7a84a0e082f633598d4bbfb39aae__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9217:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9232:4:4",
                "type": ""
              }
            ],
            "src": "9066:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9662:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9672:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9684:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9695:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9680:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9680:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9672:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9719:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9730:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9715:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9715:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9738:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9744:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9734:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9734:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9708:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9708:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9708:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9764:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9898:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_de1b0cefc4174dafa7044dd1e3d617507cb1ee4d45a15c48107e435d4521fa61_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9772:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9772:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9764:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_de1b0cefc4174dafa7044dd1e3d617507cb1ee4d45a15c48107e435d4521fa61__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9642:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9657:4:4",
                "type": ""
              }
            ],
            "src": "9491:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10087:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10097:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10109:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10120:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10105:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10105:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10097:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10144:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10155:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10140:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10140:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10163:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10169:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10159:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10159:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10133:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10133:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10133:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10189:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10323:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10197:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10197:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10189:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10067:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10082:4:4",
                "type": ""
              }
            ],
            "src": "9916:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10512:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10522:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10534:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10545:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10530:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10530:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10522:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10569:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10580:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10565:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10565:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10588:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10594:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10584:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10584:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10558:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10558:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10558:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10614:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10748:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e959e94bdf7aa44c2d7d3ac9cde88f3583f9c698ccf2fa283f583365cc9d558b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10622:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10622:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10614:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e959e94bdf7aa44c2d7d3ac9cde88f3583f9c698ccf2fa283f583365cc9d558b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10492:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10507:4:4",
                "type": ""
              }
            ],
            "src": "10341:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10864:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10874:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10886:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10897:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10882:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10882:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10874:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10954:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10967:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10978:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10963:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10963:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10910:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10910:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10910:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10836:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10848:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10859:4:4",
                "type": ""
              }
            ],
            "src": "10766:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11034:35:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11044:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11060:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11054:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11054:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "11044:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11027:6:4",
                "type": ""
              }
            ],
            "src": "10994:75:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11188:34:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11198:18:4",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "11213:3:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "11198:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11160:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11165:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "11176:11:4",
                "type": ""
              }
            ],
            "src": "11075:147:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11324:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11341:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11346:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11334:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11334:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11334:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11362:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11381:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11386:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11377:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11377:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "11362:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11296:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11301:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "11312:11:4",
                "type": ""
              }
            ],
            "src": "11228:169:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11447:261:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11457:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11480:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11462:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11462:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11457:1:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11491:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11514:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11496:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11496:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11491:1:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11654:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11656:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11656:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11656:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11575:1:4"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11582:66:4",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11650:1:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11578:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11578:74:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11572:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11572:81:4"
                  },
                  "nodeType": "YulIf",
                  "src": "11569:107:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11686:16:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11697:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11700:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11693:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11693:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "11686:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11434:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11437:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "11443:3:4",
                "type": ""
              }
            ],
            "src": "11403:305:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11756:143:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11766:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11789:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11771:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11771:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11766:1:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11800:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11823:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11805:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11805:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11800:1:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11847:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "11849:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11849:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11849:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11844:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11837:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11837:9:4"
                  },
                  "nodeType": "YulIf",
                  "src": "11834:35:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11879:14:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11888:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11891:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "11884:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11884:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "11879:1:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11745:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11748:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "11754:1:4",
                "type": ""
              }
            ],
            "src": "11714:185:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11953:300:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11963:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11986:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11968:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11968:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11963:1:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11997:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12020:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12002:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12002:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11997:1:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12195:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12197:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12197:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12197:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12107:1:4"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12100:6:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12100:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "12093:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12093:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12115:1:4"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12122:66:4",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12190:1:4"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "12118:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12118:74:4"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "12112:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12112:81:4"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12089:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12089:105:4"
                  },
                  "nodeType": "YulIf",
                  "src": "12086:131:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12227:20:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12242:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12245:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12238:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12238:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "12227:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11936:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11939:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "11945:7:4",
                "type": ""
              }
            ],
            "src": "11905:348:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12304:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12314:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12343:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12325:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12325:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12314:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12286:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12296:7:4",
                "type": ""
              }
            ],
            "src": "12259:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12403:48:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12413:32:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12438:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "12431:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12431:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12424:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12424:21:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12413:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12385:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12395:7:4",
                "type": ""
              }
            ],
            "src": "12361:90:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12502:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12512:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12527:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12534:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12523:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12523:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12512:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12484:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12494:7:4",
                "type": ""
              }
            ],
            "src": "12457:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12634:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12644:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12655:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12644:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12616:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12626:7:4",
                "type": ""
              }
            ],
            "src": "12589:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12700:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12717:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12720:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12710:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12710:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12710:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12814:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12817:4:4",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12807:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12807:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12807:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12838:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12841:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12831:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12831:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12831:15:4"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "12672:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12886:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12903:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12906:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12896:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12896:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12896:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13000:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13003:4:4",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12993:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12993:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12993:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13024:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13027:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13017:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13017:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13017:15:4"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "12858:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13072:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13089:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13092:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13082:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13082:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13082:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13186:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13189:4:4",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13179:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13179:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13179:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13210:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13213:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13203:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13203:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13203:15:4"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "13044:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13319:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13336:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13339:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13329:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13329:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13329:12:4"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "13230:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13442:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13459:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13462:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13452:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13452:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13452:12:4"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "13353:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13582:119:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13604:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13612:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13600:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13600:14:4"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13616:34:4",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13593:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13593:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13593:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13672:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13680:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13668:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13668:15:4"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13685:8:4",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13661:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13661:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13661:33:4"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13574:6:4",
                "type": ""
              }
            ],
            "src": "13476:225:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13813:60:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13835:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13843:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13831:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13831:14:4"
                      },
                      {
                        "hexValue": "616c7265616479207265706f72746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13847:18:4",
                        "type": "",
                        "value": "already reported"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13824:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13824:42:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13824:42:4"
                }
              ]
            },
            "name": "store_literal_in_memory_4ca0b7842c579c4d78e5b1bc012525bf0c6393ad7394b6d6a3b67bbec8311fab",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13805:6:4",
                "type": ""
              }
            ],
            "src": "13707:166:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13985:58:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14007:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14015:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14003:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14003:14:4"
                      },
                      {
                        "hexValue": "6d61726b65742065787069726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14019:16:4",
                        "type": "",
                        "value": "market expired"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13996:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13996:40:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13996:40:4"
                }
              ]
            },
            "name": "store_literal_in_memory_4ed068c4afe5699ff2c7dbaeda7e17a2a9fc26997df767eb5d68c7d89198e468",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13977:6:4",
                "type": ""
              }
            ],
            "src": "13879:164:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14155:61:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14177:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14185:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14173:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14173:14:4"
                      },
                      {
                        "hexValue": "6e6f206465706f7369747320666f756e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14189:19:4",
                        "type": "",
                        "value": "no deposits found"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14166:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14166:43:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14166:43:4"
                }
              ]
            },
            "name": "store_literal_in_memory_6311d0734ec7a7059362bdbec9ff187aae2080531c1e454f15110b629d0bd770",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14147:6:4",
                "type": ""
              }
            ],
            "src": "14049:167:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14328:76:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14350:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14358:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14346:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14346:14:4"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14362:34:4",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14339:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14339:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14339:58:4"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14320:6:4",
                "type": ""
              }
            ],
            "src": "14222:182:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14516:64:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14538:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14546:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14534:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14534:14:4"
                      },
                      {
                        "hexValue": "6d75737420626574206d6f7265207468616e2030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14550:22:4",
                        "type": "",
                        "value": "must bet more than 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14527:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14527:46:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14527:46:4"
                }
              ]
            },
            "name": "store_literal_in_memory_b2bd8eda2058edeae4f021021be0bdc3596a7a84a0e082f633598d4bbfb39aae",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14508:6:4",
                "type": ""
              }
            ],
            "src": "14410:170:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14692:8:4",
              "statements": []
            },
            "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14684:6:4",
                "type": ""
              }
            ],
            "src": "14586:114:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14812:66:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14834:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14842:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14830:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14830:14:4"
                      },
                      {
                        "hexValue": "6d61726b6574206e6f74206578706972656420796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14846:24:4",
                        "type": "",
                        "value": "market not expired yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14823:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14823:48:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14823:48:4"
                }
              ]
            },
            "name": "store_literal_in_memory_de1b0cefc4174dafa7044dd1e3d617507cb1ee4d45a15c48107e435d4521fa61",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14804:6:4",
                "type": ""
              }
            ],
            "src": "14706:172:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14990:64:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15012:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15020:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15008:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15008:14:4"
                      },
                      {
                        "hexValue": "6661696c656420746f2073656e64204574686572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15024:22:4",
                        "type": "",
                        "value": "failed to send Ether"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15001:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15001:46:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15001:46:4"
                }
              ]
            },
            "name": "store_literal_in_memory_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14982:6:4",
                "type": ""
              }
            ],
            "src": "14884:170:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15166:76:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15188:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15196:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15184:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15184:14:4"
                      },
                      {
                        "hexValue": "796f7520646f206e6f74206861766520616e792077696e6e696e672062657473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15200:34:4",
                        "type": "",
                        "value": "you do not have any winning bets"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15177:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15177:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15177:58:4"
                }
              ]
            },
            "name": "store_literal_in_memory_e959e94bdf7aa44c2d7d3ac9cde88f3583f9c698ccf2fa283f583365cc9d558b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15158:6:4",
                "type": ""
              }
            ],
            "src": "15060:182:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15291:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15348:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15357:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15360:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15350:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15350:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15350:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15314:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15339:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "15321:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15321:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15311:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15311:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15304:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15304:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "15301:63:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15284:5:4",
                "type": ""
              }
            ],
            "src": "15248:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15426:56:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15460:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15469:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15472:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15462:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15462:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15462:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15449:5:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15456:1:4",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "15446:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15446:12:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15439:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15439:20:4"
                  },
                  "nodeType": "YulIf",
                  "src": "15436:40:4"
                }
              ]
            },
            "name": "validator_revert_t_enum$_Side_$41",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15419:5:4",
                "type": ""
              }
            ],
            "src": "15376:106:4"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_enum$_Side_$41(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Side_$41(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_Side_$41(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$41(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Side_$41(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Side_$41(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Side_$41t_enum$_Side_$41(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Side_$41(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$41(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4ca0b7842c579c4d78e5b1bc012525bf0c6393ad7394b6d6a3b67bbec8311fab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_4ca0b7842c579c4d78e5b1bc012525bf0c6393ad7394b6d6a3b67bbec8311fab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4ed068c4afe5699ff2c7dbaeda7e17a2a9fc26997df767eb5d68c7d89198e468_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_4ed068c4afe5699ff2c7dbaeda7e17a2a9fc26997df767eb5d68c7d89198e468(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6311d0734ec7a7059362bdbec9ff187aae2080531c1e454f15110b629d0bd770_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_6311d0734ec7a7059362bdbec9ff187aae2080531c1e454f15110b629d0bd770(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b2bd8eda2058edeae4f021021be0bdc3596a7a84a0e082f633598d4bbfb39aae_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_b2bd8eda2058edeae4f021021be0bdc3596a7a84a0e082f633598d4bbfb39aae(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_stringliteral_de1b0cefc4174dafa7044dd1e3d617507cb1ee4d45a15c48107e435d4521fa61_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_de1b0cefc4174dafa7044dd1e3d617507cb1ee4d45a15c48107e435d4521fa61(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e959e94bdf7aa44c2d7d3ac9cde88f3583f9c698ccf2fa283f583365cc9d558b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_e959e94bdf7aa44c2d7d3ac9cde88f3583f9c698ccf2fa283f583365cc9d558b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4ca0b7842c579c4d78e5b1bc012525bf0c6393ad7394b6d6a3b67bbec8311fab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4ca0b7842c579c4d78e5b1bc012525bf0c6393ad7394b6d6a3b67bbec8311fab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4ed068c4afe5699ff2c7dbaeda7e17a2a9fc26997df767eb5d68c7d89198e468__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4ed068c4afe5699ff2c7dbaeda7e17a2a9fc26997df767eb5d68c7d89198e468_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6311d0734ec7a7059362bdbec9ff187aae2080531c1e454f15110b629d0bd770__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6311d0734ec7a7059362bdbec9ff187aae2080531c1e454f15110b629d0bd770_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b2bd8eda2058edeae4f021021be0bdc3596a7a84a0e082f633598d4bbfb39aae__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b2bd8eda2058edeae4f021021be0bdc3596a7a84a0e082f633598d4bbfb39aae_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_de1b0cefc4174dafa7044dd1e3d617507cb1ee4d45a15c48107e435d4521fa61__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_de1b0cefc4174dafa7044dd1e3d617507cb1ee4d45a15c48107e435d4521fa61_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e959e94bdf7aa44c2d7d3ac9cde88f3583f9c698ccf2fa283f583365cc9d558b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e959e94bdf7aa44c2d7d3ac9cde88f3583f9c698ccf2fa283f583365cc9d558b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_4ca0b7842c579c4d78e5b1bc012525bf0c6393ad7394b6d6a3b67bbec8311fab(memPtr) {\n\n        mstore(add(memPtr, 0), \"already reported\")\n\n    }\n\n    function store_literal_in_memory_4ed068c4afe5699ff2c7dbaeda7e17a2a9fc26997df767eb5d68c7d89198e468(memPtr) {\n\n        mstore(add(memPtr, 0), \"market expired\")\n\n    }\n\n    function store_literal_in_memory_6311d0734ec7a7059362bdbec9ff187aae2080531c1e454f15110b629d0bd770(memPtr) {\n\n        mstore(add(memPtr, 0), \"no deposits found\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_b2bd8eda2058edeae4f021021be0bdc3596a7a84a0e082f633598d4bbfb39aae(memPtr) {\n\n        mstore(add(memPtr, 0), \"must bet more than 0\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function store_literal_in_memory_de1b0cefc4174dafa7044dd1e3d617507cb1ee4d45a15c48107e435d4521fa61(memPtr) {\n\n        mstore(add(memPtr, 0), \"market not expired yet\")\n\n    }\n\n    function store_literal_in_memory_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b(memPtr) {\n\n        mstore(add(memPtr, 0), \"failed to send Ether\")\n\n    }\n\n    function store_literal_in_memory_e959e94bdf7aa44c2d7d3ac9cde88f3583f9c698ccf2fa283f583365cc9d558b(memPtr) {\n\n        mstore(add(memPtr, 0), \"you do not have any winning bets\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_Side_$41(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "433:2197:1:-:0;;;;;;;;;;;;;921:32:2;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;433:2197:1;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:2:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;433:2197:1:-;;;;;;;",
  "deployedSourceMap": "433:2197:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;815:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2408:219;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:2;;;;;;;;;;;;;:::i;:::-;;633:33:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;600:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;671:60:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1065:1183;;;;;;;;;;;;;:::i;:::-;;1918:198:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;815:244:1;895:5;877:23;;:14;;;;;;;;;;;:23;;;869:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;946:1;934:9;:13;926:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;994:9;979:4;:11;984:5;979:11;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;1044:9;1010:11;:23;1022:10;1010:23;;;;;;;;;;;;;;;:30;1034:5;1010:30;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;815:244;:::o;2408:219::-;1259:12:2;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2509:5:1::1;2491:23;;:14;;;;;;;;;;;:23;;;2483:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2558:7;2542:6;:13;;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2587:6;2572;:12;;;:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2617:4;2600:14;;:21;;;;;;;;;;;;;;;;;;2408:219:::0;;:::o;1668:101:2:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;633:33:1:-;;;;;;;;;;;;;;;;;:::o;600:26::-;;;;;;;;;;;;;:::o;1036:85:2:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;671:60:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1065:1183::-;1129:4;1111:22;;:14;;;;;;;;;;;:22;;;1103:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;1167:25;1251:11;:23;1263:10;1251:23;;;;;;;;;;;;;;;:41;1275:16;1251:41;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1202:11;:23;1214:10;1202:23;;;;;;;;;;;;;;;:39;1226:14;1202:39;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:90;;;;:::i;:::-;1167:125;;1330:1;1307:20;:24;1299:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1466:1;1442:4;:20;1447:14;1442:20;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;:56;;;;1497:1;1471:4;:22;1476:16;1471:22;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;1442:56;1438:805;;;1553:1;1511:11;:23;1523:10;1511:23;;;;;;;;;;;;;;;:39;1535:14;1511:39;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:43;;;;1609:1;1565:11;:23;1577:10;1565:23;;;;;;;;;;;;;;;:41;1589:16;1565:41;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:45;;;;1620:9;1644:10;:15;;1667:20;1644:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1619:73;;;1711:4;1703:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;1500:248;1438:805;;;1763:12;1778:11;:23;1790:10;1778:23;;;;;;;;;;;;;;;:38;1802:6;:13;;;;;;;;;;;;1778:38;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1763:53;;1843:1;1833:7;:11;1825:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1952:9;2005:4;:19;2010:6;:13;;;;;;;;;;;;2005:19;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1995:7;1974:4;:18;1979:6;:12;;;;;;;;;;;;1974:18;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:28;;;;:::i;:::-;:50;;;;:::i;:::-;1964:7;:60;;;;:::i;:::-;1952:72;;2075:1;2033:11;:23;2045:10;2033:23;;;;;;;;;;;;;;;:39;2057:14;2033:39;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:43;;;;2129:1;2085:11;:23;2097:10;2085:23;;;;;;;;;;;;;;;:41;2109:16;2085:41;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:45;;;;2140:9;2155:10;:15;;2178:4;2155:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2139:48;;;2204:4;2196:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;1754:489;;;1438:805;1096:1152;1065:1183::o;1918:198:2:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2270:187:2:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:153::-;205:5;243:6;230:20;221:29;;259:40;293:5;259:40;:::i;:::-;152:153;;;;:::o;311:329::-;370:6;419:2;407:9;398:7;394:23;390:32;387:119;;;425:79;;:::i;:::-;387:119;545:1;570:53;615:7;606:6;595:9;591:22;570:53;:::i;:::-;560:63;;516:117;311:329;;;;:::o;646:488::-;721:6;729;778:2;766:9;757:7;753:23;749:32;746:119;;;784:79;;:::i;:::-;746:119;904:1;929:53;974:7;965:6;954:9;950:22;929:53;:::i;:::-;919:63;;875:117;1031:2;1057:60;1109:7;1100:6;1089:9;1085:22;1057:60;:::i;:::-;1047:70;;1002:125;646:488;;;;;:::o;1140:343::-;1206:6;1255:2;1243:9;1234:7;1230:23;1226:32;1223:119;;;1261:79;;:::i;:::-;1223:119;1381:1;1406:60;1458:7;1449:6;1438:9;1434:22;1406:60;:::i;:::-;1396:70;;1352:124;1140:343;;;;:::o;1489:502::-;1571:6;1579;1628:2;1616:9;1607:7;1603:23;1599:32;1596:119;;;1634:79;;:::i;:::-;1596:119;1754:1;1779:60;1831:7;1822:6;1811:9;1807:22;1779:60;:::i;:::-;1769:70;;1725:124;1888:2;1914:60;1966:7;1957:6;1946:9;1942:22;1914:60;:::i;:::-;1904:70;;1859:125;1489:502;;;;;:::o;1997:118::-;2084:24;2102:5;2084:24;:::i;:::-;2079:3;2072:37;1997:118;;:::o;2121:109::-;2202:21;2217:5;2202:21;:::i;:::-;2197:3;2190:34;2121:109;;:::o;2236:366::-;2378:3;2399:67;2463:2;2458:3;2399:67;:::i;:::-;2392:74;;2475:93;2564:3;2475:93;:::i;:::-;2593:2;2588:3;2584:12;2577:19;;2236:366;;;:::o;2608:::-;2750:3;2771:67;2835:2;2830:3;2771:67;:::i;:::-;2764:74;;2847:93;2936:3;2847:93;:::i;:::-;2965:2;2960:3;2956:12;2949:19;;2608:366;;;:::o;2980:::-;3122:3;3143:67;3207:2;3202:3;3143:67;:::i;:::-;3136:74;;3219:93;3308:3;3219:93;:::i;:::-;3337:2;3332:3;3328:12;3321:19;;2980:366;;;:::o;3352:::-;3494:3;3515:67;3579:2;3574:3;3515:67;:::i;:::-;3508:74;;3591:93;3680:3;3591:93;:::i;:::-;3709:2;3704:3;3700:12;3693:19;;3352:366;;;:::o;3724:::-;3866:3;3887:67;3951:2;3946:3;3887:67;:::i;:::-;3880:74;;3963:93;4052:3;3963:93;:::i;:::-;4081:2;4076:3;4072:12;4065:19;;3724:366;;;:::o;4096:::-;4238:3;4259:67;4323:2;4318:3;4259:67;:::i;:::-;4252:74;;4335:93;4424:3;4335:93;:::i;:::-;4453:2;4448:3;4444:12;4437:19;;4096:366;;;:::o;4468:398::-;4627:3;4648:83;4729:1;4724:3;4648:83;:::i;:::-;4641:90;;4740:93;4829:3;4740:93;:::i;:::-;4858:1;4853:3;4849:11;4842:18;;4468:398;;;:::o;4872:366::-;5014:3;5035:67;5099:2;5094:3;5035:67;:::i;:::-;5028:74;;5111:93;5200:3;5111:93;:::i;:::-;5229:2;5224:3;5220:12;5213:19;;4872:366;;;:::o;5244:::-;5386:3;5407:67;5471:2;5466:3;5407:67;:::i;:::-;5400:74;;5483:93;5572:3;5483:93;:::i;:::-;5601:2;5596:3;5592:12;5585:19;;5244:366;;;:::o;5616:::-;5758:3;5779:67;5843:2;5838:3;5779:67;:::i;:::-;5772:74;;5855:93;5944:3;5855:93;:::i;:::-;5973:2;5968:3;5964:12;5957:19;;5616:366;;;:::o;5988:118::-;6075:24;6093:5;6075:24;:::i;:::-;6070:3;6063:37;5988:118;;:::o;6112:379::-;6296:3;6318:147;6461:3;6318:147;:::i;:::-;6311:154;;6482:3;6475:10;;6112:379;;;:::o;6497:222::-;6590:4;6628:2;6617:9;6613:18;6605:26;;6641:71;6709:1;6698:9;6694:17;6685:6;6641:71;:::i;:::-;6497:222;;;;:::o;6725:210::-;6812:4;6850:2;6839:9;6835:18;6827:26;;6863:65;6925:1;6914:9;6910:17;6901:6;6863:65;:::i;:::-;6725:210;;;;:::o;6941:419::-;7107:4;7145:2;7134:9;7130:18;7122:26;;7194:9;7188:4;7184:20;7180:1;7169:9;7165:17;7158:47;7222:131;7348:4;7222:131;:::i;:::-;7214:139;;6941:419;;;:::o;7366:::-;7532:4;7570:2;7559:9;7555:18;7547:26;;7619:9;7613:4;7609:20;7605:1;7594:9;7590:17;7583:47;7647:131;7773:4;7647:131;:::i;:::-;7639:139;;7366:419;;;:::o;7791:::-;7957:4;7995:2;7984:9;7980:18;7972:26;;8044:9;8038:4;8034:20;8030:1;8019:9;8015:17;8008:47;8072:131;8198:4;8072:131;:::i;:::-;8064:139;;7791:419;;;:::o;8216:::-;8382:4;8420:2;8409:9;8405:18;8397:26;;8469:9;8463:4;8459:20;8455:1;8444:9;8440:17;8433:47;8497:131;8623:4;8497:131;:::i;:::-;8489:139;;8216:419;;;:::o;8641:::-;8807:4;8845:2;8834:9;8830:18;8822:26;;8894:9;8888:4;8884:20;8880:1;8869:9;8865:17;8858:47;8922:131;9048:4;8922:131;:::i;:::-;8914:139;;8641:419;;;:::o;9066:::-;9232:4;9270:2;9259:9;9255:18;9247:26;;9319:9;9313:4;9309:20;9305:1;9294:9;9290:17;9283:47;9347:131;9473:4;9347:131;:::i;:::-;9339:139;;9066:419;;;:::o;9491:::-;9657:4;9695:2;9684:9;9680:18;9672:26;;9744:9;9738:4;9734:20;9730:1;9719:9;9715:17;9708:47;9772:131;9898:4;9772:131;:::i;:::-;9764:139;;9491:419;;;:::o;9916:::-;10082:4;10120:2;10109:9;10105:18;10097:26;;10169:9;10163:4;10159:20;10155:1;10144:9;10140:17;10133:47;10197:131;10323:4;10197:131;:::i;:::-;10189:139;;9916:419;;;:::o;10341:::-;10507:4;10545:2;10534:9;10530:18;10522:26;;10594:9;10588:4;10584:20;10580:1;10569:9;10565:17;10558:47;10622:131;10748:4;10622:131;:::i;:::-;10614:139;;10341:419;;;:::o;10766:222::-;10859:4;10897:2;10886:9;10882:18;10874:26;;10910:71;10978:1;10967:9;10963:17;10954:6;10910:71;:::i;:::-;10766:222;;;;:::o;11075:147::-;11176:11;11213:3;11198:18;;11075:147;;;;:::o;11228:169::-;11312:11;11346:6;11341:3;11334:19;11386:4;11381:3;11377:14;11362:29;;11228:169;;;;:::o;11403:305::-;11443:3;11462:20;11480:1;11462:20;:::i;:::-;11457:25;;11496:20;11514:1;11496:20;:::i;:::-;11491:25;;11650:1;11582:66;11578:74;11575:1;11572:81;11569:107;;;11656:18;;:::i;:::-;11569:107;11700:1;11697;11693:9;11686:16;;11403:305;;;;:::o;11714:185::-;11754:1;11771:20;11789:1;11771:20;:::i;:::-;11766:25;;11805:20;11823:1;11805:20;:::i;:::-;11800:25;;11844:1;11834:35;;11849:18;;:::i;:::-;11834:35;11891:1;11888;11884:9;11879:14;;11714:185;;;;:::o;11905:348::-;11945:7;11968:20;11986:1;11968:20;:::i;:::-;11963:25;;12002:20;12020:1;12002:20;:::i;:::-;11997:25;;12190:1;12122:66;12118:74;12115:1;12112:81;12107:1;12100:9;12093:17;12089:105;12086:131;;;12197:18;;:::i;:::-;12086:131;12245:1;12242;12238:9;12227:20;;11905:348;;;;:::o;12259:96::-;12296:7;12325:24;12343:5;12325:24;:::i;:::-;12314:35;;12259:96;;;:::o;12361:90::-;12395:7;12438:5;12431:13;12424:21;12413:32;;12361:90;;;:::o;12457:126::-;12494:7;12534:42;12527:5;12523:54;12512:65;;12457:126;;;:::o;12589:77::-;12626:7;12655:5;12644:16;;12589:77;;;:::o;12672:180::-;12720:77;12717:1;12710:88;12817:4;12814:1;12807:15;12841:4;12838:1;12831:15;12858:180;12906:77;12903:1;12896:88;13003:4;13000:1;12993:15;13027:4;13024:1;13017:15;13044:180;13092:77;13089:1;13082:88;13189:4;13186:1;13179:15;13213:4;13210:1;13203:15;13353:117;13462:1;13459;13452:12;13476:225;13616:34;13612:1;13604:6;13600:14;13593:58;13685:8;13680:2;13672:6;13668:15;13661:33;13476:225;:::o;13707:166::-;13847:18;13843:1;13835:6;13831:14;13824:42;13707:166;:::o;13879:164::-;14019:16;14015:1;14007:6;14003:14;13996:40;13879:164;:::o;14049:167::-;14189:19;14185:1;14177:6;14173:14;14166:43;14049:167;:::o;14222:182::-;14362:34;14358:1;14350:6;14346:14;14339:58;14222:182;:::o;14410:170::-;14550:22;14546:1;14538:6;14534:14;14527:46;14410:170;:::o;14586:114::-;;:::o;14706:172::-;14846:24;14842:1;14834:6;14830:14;14823:48;14706:172;:::o;14884:170::-;15024:22;15020:1;15012:6;15008:14;15001:46;14884:170;:::o;15060:182::-;15200:34;15196:1;15188:6;15184:14;15177:58;15060:182;:::o;15248:122::-;15321:24;15339:5;15321:24;:::i;:::-;15314:5;15311:35;15301:63;;15360:1;15357;15350:12;15301:63;15248:122;:::o;15376:106::-;15456:1;15449:5;15446:12;15436:40;;15472:1;15469;15462:12;15436:40;15376:106;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/// @title FIFA2022 Prediction (Blockchain Developer Bootcamp Final Project)\r\n/// @author Andor Szegedi\r\n/// @notice This is a prototype of a FIFA2022 Prediction Market pool\r\n/// @dev reportResult to be called manually by contract owner in this version\r\n/// @custom:experimental This is an experimental contract.\r\n\r\ncontract predictionMarket is Ownable {\r\n\r\n  enum Side { FranceWin, FranceLoose }\r\n\r\n  struct Result {\r\n    Side winner;\r\n    Side loser;\r\n  }\r\n\r\n  Result result;\r\n\r\n  bool public marketFinished;\r\n\r\n  mapping(Side => uint) public bets;\r\n  mapping(address => mapping(Side => uint)) public betsPerUser;\r\n\r\n  /// @notice Will France win FIFA2022? Pick a side and pay more than 0 ETH\r\n  function placeBet(Side _side) external payable {\r\n    require(marketFinished == false, 'market expired');\r\n    require(msg.value > 0, 'must bet more than 0');\r\n    bets[_side] += msg.value;\r\n    betsPerUser[msg.sender][_side] += msg.value;\r\n  }\r\n\r\n  function claimFunds() external {\r\n    require(marketFinished == true, 'market not expired yet');\r\n    uint totalDepositedbyUser =\r\n      betsPerUser[msg.sender][Side.FranceWin] +\r\n      betsPerUser[msg.sender][Side.FranceLoose];\r\n    require(totalDepositedbyUser > 0, 'no deposits found');\r\n  /// @notice if one side did not receive any bets = everybody gets a refund\r\n    if (bets[Side.FranceWin] == 0 || bets[Side.FranceLoose] == 0) {\r\n        betsPerUser[msg.sender][Side.FranceWin] = 0;\r\n        betsPerUser[msg.sender][Side.FranceLoose] = 0;\r\n      (bool sent, ) =\r\n        msg.sender.call{value: totalDepositedbyUser}(\"\");\r\n        require(sent, \"failed to send Ether\");\r\n    } else {\r\n      uint userBet = betsPerUser[msg.sender][result.winner];\r\n      require(userBet > 0, 'you do not have any winning bets');\r\n  /// @notice gains distributed proportionally to users bets\r\n      uint gain = userBet + bets[result.loser] * userBet / bets[result.winner];\r\n      betsPerUser[msg.sender][Side.FranceWin] = 0;\r\n      betsPerUser[msg.sender][Side.FranceLoose] = 0;\r\n      (bool sent, ) = msg.sender.call{value: gain}(\"\");\r\n      require(sent, \"failed to send Ether\");\r\n      }\r\n  }\r\n\r\n  /// @notice to be called only by the contract owner manually in this version\r\n  /// @dev owner to be replaced by custom Chainlink Oracle in production\r\n  function reportResult(Side _winner, Side _loser) external onlyOwner {\r\n    require(marketFinished == false, 'already reported');\r\n    result.winner = _winner;\r\n    result.loser = _loser;\r\n    marketFinished = true;\r\n  }\r\n}\r\n",
  "sourcePath": "C:/Users/admin/Desktop/blockchain-developer-bootcamp-final-project/contracts/predictionMarket.sol",
  "ast": {
    "absolutePath": "/C/Users/admin/Desktop/blockchain-developer-bootcamp-final-project/contracts/predictionMarket.sol",
    "exportedSymbols": {
      "Context": [
        425
      ],
      "Ownable": [
        403
      ],
      "predictionMarket": [
        298
      ]
    },
    "id": 299,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:22:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 35,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 299,
        "sourceUnit": 404,
        "src": "61:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 403,
              "src": "462:7:1"
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "462:7:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 36,
          "nodeType": "StructuredDocumentation",
          "src": "117:314:1",
          "text": "@title FIFA2022 Prediction (Blockchain Developer Bootcamp Final Project)\n @author Andor Szegedi\n @notice This is a prototype of a FIFA2022 Prediction Market pool\n @dev reportResult to be called manually by contract owner in this version\n @custom:experimental This is an experimental contract."
        },
        "fullyImplemented": true,
        "id": 298,
        "linearizedBaseContracts": [
          298,
          403,
          425
        ],
        "name": "predictionMarket",
        "nameLocation": "442:16:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "predictionMarket.Side",
            "id": 41,
            "members": [
              {
                "id": 39,
                "name": "FranceWin",
                "nameLocation": "489:9:1",
                "nodeType": "EnumValue",
                "src": "489:9:1"
              },
              {
                "id": 40,
                "name": "FranceLoose",
                "nameLocation": "500:11:1",
                "nodeType": "EnumValue",
                "src": "500:11:1"
              }
            ],
            "name": "Side",
            "nameLocation": "482:4:1",
            "nodeType": "EnumDefinition",
            "src": "477:36:1"
          },
          {
            "canonicalName": "predictionMarket.Result",
            "id": 48,
            "members": [
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "winner",
                "nameLocation": "545:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 48,
                "src": "540:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$41",
                  "typeString": "enum predictionMarket.Side"
                },
                "typeName": {
                  "id": 43,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 42,
                    "name": "Side",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 41,
                    "src": "540:4:1"
                  },
                  "referencedDeclaration": 41,
                  "src": "540:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum predictionMarket.Side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47,
                "mutability": "mutable",
                "name": "loser",
                "nameLocation": "563:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 48,
                "src": "558:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$41",
                  "typeString": "enum predictionMarket.Side"
                },
                "typeName": {
                  "id": 46,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 45,
                    "name": "Side",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 41,
                    "src": "558:4:1"
                  },
                  "referencedDeclaration": 41,
                  "src": "558:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum predictionMarket.Side"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Result",
            "nameLocation": "526:6:1",
            "nodeType": "StructDefinition",
            "scope": 298,
            "src": "519:55:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 51,
            "mutability": "mutable",
            "name": "result",
            "nameLocation": "587:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 298,
            "src": "580:13:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Result_$48_storage",
              "typeString": "struct predictionMarket.Result"
            },
            "typeName": {
              "id": 50,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49,
                "name": "Result",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48,
                "src": "580:6:1"
              },
              "referencedDeclaration": 48,
              "src": "580:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Result_$48_storage_ptr",
                "typeString": "struct predictionMarket.Result"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "806ad858",
            "id": 53,
            "mutability": "mutable",
            "name": "marketFinished",
            "nameLocation": "612:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 298,
            "src": "600:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 52,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "600:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7e0ecc00",
            "id": 58,
            "mutability": "mutable",
            "name": "bets",
            "nameLocation": "662:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 298,
            "src": "633:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
              "typeString": "mapping(enum predictionMarket.Side => uint256)"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 55,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 54,
                  "name": "Side",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41,
                  "src": "641:4:1"
                },
                "referencedDeclaration": 41,
                "src": "641:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$41",
                  "typeString": "enum predictionMarket.Side"
                }
              },
              "nodeType": "Mapping",
              "src": "633:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                "typeString": "mapping(enum predictionMarket.Side => uint256)"
              },
              "valueType": {
                "id": 56,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "649:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9ce40992",
            "id": 65,
            "mutability": "mutable",
            "name": "betsPerUser",
            "nameLocation": "720:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 298,
            "src": "671:60:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 59,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "679:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "671:41:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
              },
              "valueType": {
                "id": 63,
                "keyType": {
                  "id": 61,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 60,
                    "name": "Side",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 41,
                    "src": "698:4:1"
                  },
                  "referencedDeclaration": 41,
                  "src": "698:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum predictionMarket.Side"
                  }
                },
                "nodeType": "Mapping",
                "src": "690:21:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                  "typeString": "mapping(enum predictionMarket.Side => uint256)"
                },
                "valueType": {
                  "id": 62,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "706:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "862:197:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 73,
                          "name": "marketFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "877:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "895:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "877:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d61726b65742065787069726564",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "902:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ed068c4afe5699ff2c7dbaeda7e17a2a9fc26997df767eb5d68c7d89198e468",
                          "typeString": "literal_string \"market expired\""
                        },
                        "value": "market expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ed068c4afe5699ff2c7dbaeda7e17a2a9fc26997df767eb5d68c7d89198e468",
                          "typeString": "literal_string \"market expired\""
                        }
                      ],
                      "id": 72,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "869:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "869:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "869:50:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 80,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "934:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "934:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "946:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "934:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d75737420626574206d6f7265207468616e2030",
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "949:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b2bd8eda2058edeae4f021021be0bdc3596a7a84a0e082f633598d4bbfb39aae",
                          "typeString": "literal_string \"must bet more than 0\""
                        },
                        "value": "must bet more than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b2bd8eda2058edeae4f021021be0bdc3596a7a84a0e082f633598d4bbfb39aae",
                          "typeString": "literal_string \"must bet more than 0\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "926:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "926:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "926:46:1"
                },
                {
                  "expression": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87,
                        "name": "bets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "979:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                          "typeString": "mapping(enum predictionMarket.Side => uint256)"
                        }
                      },
                      "id": 89,
                      "indexExpression": {
                        "id": 88,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "984:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$41",
                          "typeString": "enum predictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "979:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 90,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "994:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "994:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "979:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "979:24:1"
                },
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 94,
                          "name": "betsPerUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "1010:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
                          }
                        },
                        "id": 98,
                        "indexExpression": {
                          "expression": {
                            "id": 95,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1022:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1022:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1010:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                          "typeString": "mapping(enum predictionMarket.Side => uint256)"
                        }
                      },
                      "id": 99,
                      "indexExpression": {
                        "id": 97,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1034:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$41",
                          "typeString": "enum predictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1010:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 100,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1044:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1044:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1010:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1010:43:1"
                }
              ]
            },
            "documentation": {
              "id": 66,
              "nodeType": "StructuredDocumentation",
              "src": "738:73:1",
              "text": "@notice Will France win FIFA2022? Pick a side and pay more than 0 ETH"
            },
            "functionSelector": "43046844",
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeBet",
            "nameLocation": "824:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_side",
                  "nameLocation": "838:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "833:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum predictionMarket.Side"
                  },
                  "typeName": {
                    "id": 68,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67,
                      "name": "Side",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41,
                      "src": "833:4:1"
                    },
                    "referencedDeclaration": 41,
                    "src": "833:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum predictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "832:12:1"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "862:0:1"
            },
            "scope": 298,
            "src": "815:244:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "1096:1152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 109,
                          "name": "marketFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "1111:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1129:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1111:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d61726b6574206e6f74206578706972656420796574",
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1135:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de1b0cefc4174dafa7044dd1e3d617507cb1ee4d45a15c48107e435d4521fa61",
                          "typeString": "literal_string \"market not expired yet\""
                        },
                        "value": "market not expired yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de1b0cefc4174dafa7044dd1e3d617507cb1ee4d45a15c48107e435d4521fa61",
                          "typeString": "literal_string \"market not expired yet\""
                        }
                      ],
                      "id": 108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1103:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1103:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1103:57:1"
                },
                {
                  "assignments": [
                    116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116,
                      "mutability": "mutable",
                      "name": "totalDepositedbyUser",
                      "nameLocation": "1172:20:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 260,
                      "src": "1167:25:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 115,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1167:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 132,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 117,
                          "name": "betsPerUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "1202:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
                          }
                        },
                        "id": 120,
                        "indexExpression": {
                          "expression": {
                            "id": 118,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1214:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1214:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1202:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                          "typeString": "mapping(enum predictionMarket.Side => uint256)"
                        }
                      },
                      "id": 123,
                      "indexExpression": {
                        "expression": {
                          "id": 121,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "1226:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                            "typeString": "type(enum predictionMarket.Side)"
                          }
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "FranceWin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39,
                        "src": "1226:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$41",
                          "typeString": "enum predictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1202:39:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 124,
                          "name": "betsPerUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "1251:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
                          }
                        },
                        "id": 127,
                        "indexExpression": {
                          "expression": {
                            "id": 125,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1263:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1263:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1251:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                          "typeString": "mapping(enum predictionMarket.Side => uint256)"
                        }
                      },
                      "id": 130,
                      "indexExpression": {
                        "expression": {
                          "id": 128,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "1275:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                            "typeString": "type(enum predictionMarket.Side)"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "FranceLoose",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "1275:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$41",
                          "typeString": "enum predictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1251:41:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1202:90:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1167:125:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 134,
                          "name": "totalDepositedbyUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "1307:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1330:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1307:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f206465706f7369747320666f756e64",
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1333:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6311d0734ec7a7059362bdbec9ff187aae2080531c1e454f15110b629d0bd770",
                          "typeString": "literal_string \"no deposits found\""
                        },
                        "value": "no deposits found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6311d0734ec7a7059362bdbec9ff187aae2080531c1e454f15110b629d0bd770",
                          "typeString": "literal_string \"no deposits found\""
                        }
                      ],
                      "id": 133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1299:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1299:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1299:54:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 140,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "1442:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                            "typeString": "mapping(enum predictionMarket.Side => uint256)"
                          }
                        },
                        "id": 143,
                        "indexExpression": {
                          "expression": {
                            "id": 141,
                            "name": "Side",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "1447:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                              "typeString": "type(enum predictionMarket.Side)"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "FranceWin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "1447:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$41",
                            "typeString": "enum predictionMarket.Side"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1442:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1466:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1442:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 146,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "1471:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                            "typeString": "mapping(enum predictionMarket.Side => uint256)"
                          }
                        },
                        "id": 149,
                        "indexExpression": {
                          "expression": {
                            "id": 147,
                            "name": "Side",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "1476:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                              "typeString": "type(enum predictionMarket.Side)"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "FranceLoose",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "1476:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$41",
                            "typeString": "enum predictionMarket.Side"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1471:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1497:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1471:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1442:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "@notice if one side did not receive any bets = everybody gets a refund",
                  "falseBody": {
                    "id": 258,
                    "nodeType": "Block",
                    "src": "1754:489:1",
                    "statements": [
                      {
                        "assignments": [
                          190
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 190,
                            "mutability": "mutable",
                            "name": "userBet",
                            "nameLocation": "1768:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 258,
                            "src": "1763:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 189,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1763:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 198,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 191,
                              "name": "betsPerUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "1778:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
                              }
                            },
                            "id": 194,
                            "indexExpression": {
                              "expression": {
                                "id": 192,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1790:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1790:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1778:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                              "typeString": "mapping(enum predictionMarket.Side => uint256)"
                            }
                          },
                          "id": 197,
                          "indexExpression": {
                            "expression": {
                              "id": 195,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "1802:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Result_$48_storage",
                                "typeString": "struct predictionMarket.Result storage ref"
                              }
                            },
                            "id": 196,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "winner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44,
                            "src": "1802:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Side_$41",
                              "typeString": "enum predictionMarket.Side"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1778:38:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1763:53:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 200,
                                "name": "userBet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 190,
                                "src": "1833:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1843:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1833:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "796f7520646f206e6f74206861766520616e792077696e6e696e672062657473",
                              "id": 203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1846:34:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e959e94bdf7aa44c2d7d3ac9cde88f3583f9c698ccf2fa283f583365cc9d558b",
                                "typeString": "literal_string \"you do not have any winning bets\""
                              },
                              "value": "you do not have any winning bets"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e959e94bdf7aa44c2d7d3ac9cde88f3583f9c698ccf2fa283f583365cc9d558b",
                                "typeString": "literal_string \"you do not have any winning bets\""
                              }
                            ],
                            "id": 199,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1825:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1825:56:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 205,
                        "nodeType": "ExpressionStatement",
                        "src": "1825:56:1"
                      },
                      {
                        "assignments": [
                          208
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 208,
                            "mutability": "mutable",
                            "name": "gain",
                            "nameLocation": "1957:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 258,
                            "src": "1952:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 207,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1952:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "documentation": "@notice gains distributed proportionally to users bets",
                        "id": 222,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 209,
                            "name": "userBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "1964:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 210,
                                  "name": "bets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58,
                                  "src": "1974:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                                    "typeString": "mapping(enum predictionMarket.Side => uint256)"
                                  }
                                },
                                "id": 213,
                                "indexExpression": {
                                  "expression": {
                                    "id": 211,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51,
                                    "src": "1979:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Result_$48_storage",
                                      "typeString": "struct predictionMarket.Result storage ref"
                                    }
                                  },
                                  "id": 212,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "loser",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 47,
                                  "src": "1979:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Side_$41",
                                    "typeString": "enum predictionMarket.Side"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1974:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 214,
                                "name": "userBet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 190,
                                "src": "1995:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1974:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 216,
                                "name": "bets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "2005:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                                  "typeString": "mapping(enum predictionMarket.Side => uint256)"
                                }
                              },
                              "id": 219,
                              "indexExpression": {
                                "expression": {
                                  "id": 217,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51,
                                  "src": "2010:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Result_$48_storage",
                                    "typeString": "struct predictionMarket.Result storage ref"
                                  }
                                },
                                "id": 218,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "winner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44,
                                "src": "2010:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Side_$41",
                                  "typeString": "enum predictionMarket.Side"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2005:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1974:50:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1964:60:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1952:72:1"
                      },
                      {
                        "expression": {
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 223,
                                "name": "betsPerUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "2033:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
                                }
                              },
                              "id": 228,
                              "indexExpression": {
                                "expression": {
                                  "id": 224,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2045:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2045:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2033:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                                "typeString": "mapping(enum predictionMarket.Side => uint256)"
                              }
                            },
                            "id": 229,
                            "indexExpression": {
                              "expression": {
                                "id": 226,
                                "name": "Side",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "2057:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                                  "typeString": "type(enum predictionMarket.Side)"
                                }
                              },
                              "id": 227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "FranceWin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 39,
                              "src": "2057:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Side_$41",
                                "typeString": "enum predictionMarket.Side"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2033:39:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2075:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2033:43:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 232,
                        "nodeType": "ExpressionStatement",
                        "src": "2033:43:1"
                      },
                      {
                        "expression": {
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 233,
                                "name": "betsPerUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "2085:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
                                }
                              },
                              "id": 238,
                              "indexExpression": {
                                "expression": {
                                  "id": 234,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2097:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2097:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2085:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                                "typeString": "mapping(enum predictionMarket.Side => uint256)"
                              }
                            },
                            "id": 239,
                            "indexExpression": {
                              "expression": {
                                "id": 236,
                                "name": "Side",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "2109:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                                  "typeString": "type(enum predictionMarket.Side)"
                                }
                              },
                              "id": 237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "FranceLoose",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40,
                              "src": "2109:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Side_$41",
                                "typeString": "enum predictionMarket.Side"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2085:41:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2129:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2085:45:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 242,
                        "nodeType": "ExpressionStatement",
                        "src": "2085:45:1"
                      },
                      {
                        "assignments": [
                          244,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 244,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "2145:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 258,
                            "src": "2140:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 243,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2140:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 252,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2184:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 245,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2155:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2155:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2155:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 248,
                                "name": "gain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 208,
                                "src": "2178:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2155:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2155:32:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2139:48:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 254,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 244,
                              "src": "2204:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6661696c656420746f2073656e64204574686572",
                              "id": 255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2210:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b",
                                "typeString": "literal_string \"failed to send Ether\""
                              },
                              "value": "failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b",
                                "typeString": "literal_string \"failed to send Ether\""
                              }
                            ],
                            "id": 253,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2196:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2196:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 257,
                        "nodeType": "ExpressionStatement",
                        "src": "2196:37:1"
                      }
                    ]
                  },
                  "id": 259,
                  "nodeType": "IfStatement",
                  "src": "1438:805:1",
                  "trueBody": {
                    "id": 188,
                    "nodeType": "Block",
                    "src": "1500:248:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 153,
                                "name": "betsPerUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "1511:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
                                }
                              },
                              "id": 158,
                              "indexExpression": {
                                "expression": {
                                  "id": 154,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1523:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1523:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1511:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                                "typeString": "mapping(enum predictionMarket.Side => uint256)"
                              }
                            },
                            "id": 159,
                            "indexExpression": {
                              "expression": {
                                "id": 156,
                                "name": "Side",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1535:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                                  "typeString": "type(enum predictionMarket.Side)"
                                }
                              },
                              "id": 157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "FranceWin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 39,
                              "src": "1535:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Side_$41",
                                "typeString": "enum predictionMarket.Side"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1511:39:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1553:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1511:43:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 162,
                        "nodeType": "ExpressionStatement",
                        "src": "1511:43:1"
                      },
                      {
                        "expression": {
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 163,
                                "name": "betsPerUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "1565:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
                                }
                              },
                              "id": 168,
                              "indexExpression": {
                                "expression": {
                                  "id": 164,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1577:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1577:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1565:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                                "typeString": "mapping(enum predictionMarket.Side => uint256)"
                              }
                            },
                            "id": 169,
                            "indexExpression": {
                              "expression": {
                                "id": 166,
                                "name": "Side",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1589:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                                  "typeString": "type(enum predictionMarket.Side)"
                                }
                              },
                              "id": 167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "FranceLoose",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40,
                              "src": "1589:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Side_$41",
                                "typeString": "enum predictionMarket.Side"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1565:41:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1609:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1565:45:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 172,
                        "nodeType": "ExpressionStatement",
                        "src": "1565:45:1"
                      },
                      {
                        "assignments": [
                          174,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 174,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "1625:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 188,
                            "src": "1620:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 173,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1620:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 182,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1689:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 175,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1644:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1644:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1644:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 178,
                                "name": "totalDepositedbyUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116,
                                "src": "1667:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1644:44:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1644:48:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1619:73:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 184,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 174,
                              "src": "1711:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6661696c656420746f2073656e64204574686572",
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1717:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b",
                                "typeString": "literal_string \"failed to send Ether\""
                              },
                              "value": "failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b",
                                "typeString": "literal_string \"failed to send Ether\""
                              }
                            ],
                            "id": 183,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1703:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1703:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "1703:37:1"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "ac307773",
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimFunds",
            "nameLocation": "1074:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1084:2:1"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1096:0:1"
            },
            "scope": 298,
            "src": "1065:1183:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "2476:151:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 274,
                          "name": "marketFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "2491:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2509:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2491:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c7265616479207265706f72746564",
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2516:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ca0b7842c579c4d78e5b1bc012525bf0c6393ad7394b6d6a3b67bbec8311fab",
                          "typeString": "literal_string \"already reported\""
                        },
                        "value": "already reported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ca0b7842c579c4d78e5b1bc012525bf0c6393ad7394b6d6a3b67bbec8311fab",
                          "typeString": "literal_string \"already reported\""
                        }
                      ],
                      "id": 273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2483:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2483:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "2483:52:1"
                },
                {
                  "expression": {
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 280,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "2542:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$48_storage",
                          "typeString": "struct predictionMarket.Result storage ref"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "2542:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum predictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 283,
                      "name": "_winner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 265,
                      "src": "2558:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum predictionMarket.Side"
                      }
                    },
                    "src": "2542:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum predictionMarket.Side"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
                  "src": "2542:23:1"
                },
                {
                  "expression": {
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 286,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "2572:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$48_storage",
                          "typeString": "struct predictionMarket.Result storage ref"
                        }
                      },
                      "id": 288,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "loser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47,
                      "src": "2572:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum predictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 289,
                      "name": "_loser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "2587:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum predictionMarket.Side"
                      }
                    },
                    "src": "2572:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum predictionMarket.Side"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "2572:21:1"
                },
                {
                  "expression": {
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 292,
                      "name": "marketFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "2600:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2617:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2600:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "2600:21:1"
                }
              ]
            },
            "documentation": {
              "id": 262,
              "nodeType": "StructuredDocumentation",
              "src": "2254:150:1",
              "text": "@notice to be called only by the contract owner manually in this version\n @dev owner to be replaced by custom Chainlink Oracle in production"
            },
            "functionSelector": "4ec942b7",
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 271,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 270,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 345,
                  "src": "2466:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2466:9:1"
              }
            ],
            "name": "reportResult",
            "nameLocation": "2417:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "_winner",
                  "nameLocation": "2435:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "2430:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum predictionMarket.Side"
                  },
                  "typeName": {
                    "id": 264,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 263,
                      "name": "Side",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41,
                      "src": "2430:4:1"
                    },
                    "referencedDeclaration": 41,
                    "src": "2430:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum predictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "_loser",
                  "nameLocation": "2449:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "2444:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum predictionMarket.Side"
                  },
                  "typeName": {
                    "id": 267,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 266,
                      "name": "Side",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41,
                      "src": "2444:4:1"
                    },
                    "referencedDeclaration": 41,
                    "src": "2444:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum predictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2429:27:1"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2476:0:1"
            },
            "scope": 298,
            "src": "2408:219:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 299,
        "src": "433:2197:1",
        "usedErrors": []
      }
    ],
    "src": "35:2597:1"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/admin/Desktop/blockchain-developer-bootcamp-final-project/contracts/predictionMarket.sol",
    "exportedSymbols": {
      "Context": [
        425
      ],
      "Ownable": [
        403
      ],
      "predictionMarket": [
        298
      ]
    },
    "id": 299,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:22:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 35,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 299,
        "sourceUnit": 404,
        "src": "61:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 403,
              "src": "462:7:1"
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "462:7:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 36,
          "nodeType": "StructuredDocumentation",
          "src": "117:314:1",
          "text": "@title FIFA2022 Prediction (Blockchain Developer Bootcamp Final Project)\n @author Andor Szegedi\n @notice This is a prototype of a FIFA2022 Prediction Market pool\n @dev reportResult to be called manually by contract owner in this version\n @custom:experimental This is an experimental contract."
        },
        "fullyImplemented": true,
        "id": 298,
        "linearizedBaseContracts": [
          298,
          403,
          425
        ],
        "name": "predictionMarket",
        "nameLocation": "442:16:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "predictionMarket.Side",
            "id": 41,
            "members": [
              {
                "id": 39,
                "name": "FranceWin",
                "nameLocation": "489:9:1",
                "nodeType": "EnumValue",
                "src": "489:9:1"
              },
              {
                "id": 40,
                "name": "FranceLoose",
                "nameLocation": "500:11:1",
                "nodeType": "EnumValue",
                "src": "500:11:1"
              }
            ],
            "name": "Side",
            "nameLocation": "482:4:1",
            "nodeType": "EnumDefinition",
            "src": "477:36:1"
          },
          {
            "canonicalName": "predictionMarket.Result",
            "id": 48,
            "members": [
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "winner",
                "nameLocation": "545:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 48,
                "src": "540:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$41",
                  "typeString": "enum predictionMarket.Side"
                },
                "typeName": {
                  "id": 43,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 42,
                    "name": "Side",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 41,
                    "src": "540:4:1"
                  },
                  "referencedDeclaration": 41,
                  "src": "540:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum predictionMarket.Side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47,
                "mutability": "mutable",
                "name": "loser",
                "nameLocation": "563:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 48,
                "src": "558:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$41",
                  "typeString": "enum predictionMarket.Side"
                },
                "typeName": {
                  "id": 46,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 45,
                    "name": "Side",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 41,
                    "src": "558:4:1"
                  },
                  "referencedDeclaration": 41,
                  "src": "558:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum predictionMarket.Side"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Result",
            "nameLocation": "526:6:1",
            "nodeType": "StructDefinition",
            "scope": 298,
            "src": "519:55:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 51,
            "mutability": "mutable",
            "name": "result",
            "nameLocation": "587:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 298,
            "src": "580:13:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Result_$48_storage",
              "typeString": "struct predictionMarket.Result"
            },
            "typeName": {
              "id": 50,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49,
                "name": "Result",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48,
                "src": "580:6:1"
              },
              "referencedDeclaration": 48,
              "src": "580:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Result_$48_storage_ptr",
                "typeString": "struct predictionMarket.Result"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "806ad858",
            "id": 53,
            "mutability": "mutable",
            "name": "marketFinished",
            "nameLocation": "612:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 298,
            "src": "600:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 52,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "600:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7e0ecc00",
            "id": 58,
            "mutability": "mutable",
            "name": "bets",
            "nameLocation": "662:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 298,
            "src": "633:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
              "typeString": "mapping(enum predictionMarket.Side => uint256)"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 55,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 54,
                  "name": "Side",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41,
                  "src": "641:4:1"
                },
                "referencedDeclaration": 41,
                "src": "641:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$41",
                  "typeString": "enum predictionMarket.Side"
                }
              },
              "nodeType": "Mapping",
              "src": "633:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                "typeString": "mapping(enum predictionMarket.Side => uint256)"
              },
              "valueType": {
                "id": 56,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "649:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9ce40992",
            "id": 65,
            "mutability": "mutable",
            "name": "betsPerUser",
            "nameLocation": "720:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 298,
            "src": "671:60:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 59,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "679:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "671:41:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
              },
              "valueType": {
                "id": 63,
                "keyType": {
                  "id": 61,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 60,
                    "name": "Side",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 41,
                    "src": "698:4:1"
                  },
                  "referencedDeclaration": 41,
                  "src": "698:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum predictionMarket.Side"
                  }
                },
                "nodeType": "Mapping",
                "src": "690:21:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                  "typeString": "mapping(enum predictionMarket.Side => uint256)"
                },
                "valueType": {
                  "id": 62,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "706:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "862:197:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 73,
                          "name": "marketFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "877:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "895:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "877:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d61726b65742065787069726564",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "902:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ed068c4afe5699ff2c7dbaeda7e17a2a9fc26997df767eb5d68c7d89198e468",
                          "typeString": "literal_string \"market expired\""
                        },
                        "value": "market expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ed068c4afe5699ff2c7dbaeda7e17a2a9fc26997df767eb5d68c7d89198e468",
                          "typeString": "literal_string \"market expired\""
                        }
                      ],
                      "id": 72,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "869:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "869:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "869:50:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 80,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "934:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "934:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "946:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "934:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d75737420626574206d6f7265207468616e2030",
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "949:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b2bd8eda2058edeae4f021021be0bdc3596a7a84a0e082f633598d4bbfb39aae",
                          "typeString": "literal_string \"must bet more than 0\""
                        },
                        "value": "must bet more than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b2bd8eda2058edeae4f021021be0bdc3596a7a84a0e082f633598d4bbfb39aae",
                          "typeString": "literal_string \"must bet more than 0\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "926:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "926:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "926:46:1"
                },
                {
                  "expression": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87,
                        "name": "bets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "979:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                          "typeString": "mapping(enum predictionMarket.Side => uint256)"
                        }
                      },
                      "id": 89,
                      "indexExpression": {
                        "id": 88,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "984:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$41",
                          "typeString": "enum predictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "979:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 90,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "994:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "994:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "979:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "979:24:1"
                },
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 94,
                          "name": "betsPerUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "1010:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
                          }
                        },
                        "id": 98,
                        "indexExpression": {
                          "expression": {
                            "id": 95,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1022:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1022:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1010:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                          "typeString": "mapping(enum predictionMarket.Side => uint256)"
                        }
                      },
                      "id": 99,
                      "indexExpression": {
                        "id": 97,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1034:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$41",
                          "typeString": "enum predictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1010:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 100,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1044:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1044:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1010:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1010:43:1"
                }
              ]
            },
            "documentation": {
              "id": 66,
              "nodeType": "StructuredDocumentation",
              "src": "738:73:1",
              "text": "@notice Will France win FIFA2022? Pick a side and pay more than 0 ETH"
            },
            "functionSelector": "43046844",
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeBet",
            "nameLocation": "824:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_side",
                  "nameLocation": "838:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "833:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum predictionMarket.Side"
                  },
                  "typeName": {
                    "id": 68,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67,
                      "name": "Side",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41,
                      "src": "833:4:1"
                    },
                    "referencedDeclaration": 41,
                    "src": "833:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum predictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "832:12:1"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "862:0:1"
            },
            "scope": 298,
            "src": "815:244:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "1096:1152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 109,
                          "name": "marketFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "1111:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1129:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1111:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d61726b6574206e6f74206578706972656420796574",
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1135:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de1b0cefc4174dafa7044dd1e3d617507cb1ee4d45a15c48107e435d4521fa61",
                          "typeString": "literal_string \"market not expired yet\""
                        },
                        "value": "market not expired yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de1b0cefc4174dafa7044dd1e3d617507cb1ee4d45a15c48107e435d4521fa61",
                          "typeString": "literal_string \"market not expired yet\""
                        }
                      ],
                      "id": 108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1103:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1103:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1103:57:1"
                },
                {
                  "assignments": [
                    116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116,
                      "mutability": "mutable",
                      "name": "totalDepositedbyUser",
                      "nameLocation": "1172:20:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 260,
                      "src": "1167:25:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 115,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1167:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 132,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 117,
                          "name": "betsPerUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "1202:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
                          }
                        },
                        "id": 120,
                        "indexExpression": {
                          "expression": {
                            "id": 118,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1214:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1214:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1202:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                          "typeString": "mapping(enum predictionMarket.Side => uint256)"
                        }
                      },
                      "id": 123,
                      "indexExpression": {
                        "expression": {
                          "id": 121,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "1226:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                            "typeString": "type(enum predictionMarket.Side)"
                          }
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "FranceWin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39,
                        "src": "1226:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$41",
                          "typeString": "enum predictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1202:39:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 124,
                          "name": "betsPerUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "1251:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
                          }
                        },
                        "id": 127,
                        "indexExpression": {
                          "expression": {
                            "id": 125,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1263:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1263:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1251:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                          "typeString": "mapping(enum predictionMarket.Side => uint256)"
                        }
                      },
                      "id": 130,
                      "indexExpression": {
                        "expression": {
                          "id": 128,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "1275:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                            "typeString": "type(enum predictionMarket.Side)"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "FranceLoose",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "1275:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$41",
                          "typeString": "enum predictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1251:41:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1202:90:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1167:125:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 134,
                          "name": "totalDepositedbyUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "1307:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1330:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1307:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f206465706f7369747320666f756e64",
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1333:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6311d0734ec7a7059362bdbec9ff187aae2080531c1e454f15110b629d0bd770",
                          "typeString": "literal_string \"no deposits found\""
                        },
                        "value": "no deposits found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6311d0734ec7a7059362bdbec9ff187aae2080531c1e454f15110b629d0bd770",
                          "typeString": "literal_string \"no deposits found\""
                        }
                      ],
                      "id": 133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1299:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1299:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1299:54:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 140,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "1442:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                            "typeString": "mapping(enum predictionMarket.Side => uint256)"
                          }
                        },
                        "id": 143,
                        "indexExpression": {
                          "expression": {
                            "id": 141,
                            "name": "Side",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "1447:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                              "typeString": "type(enum predictionMarket.Side)"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "FranceWin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "1447:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$41",
                            "typeString": "enum predictionMarket.Side"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1442:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1466:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1442:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 146,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "1471:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                            "typeString": "mapping(enum predictionMarket.Side => uint256)"
                          }
                        },
                        "id": 149,
                        "indexExpression": {
                          "expression": {
                            "id": 147,
                            "name": "Side",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "1476:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                              "typeString": "type(enum predictionMarket.Side)"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "FranceLoose",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "1476:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$41",
                            "typeString": "enum predictionMarket.Side"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1471:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1497:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1471:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1442:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "@notice if one side did not receive any bets = everybody gets a refund",
                  "falseBody": {
                    "id": 258,
                    "nodeType": "Block",
                    "src": "1754:489:1",
                    "statements": [
                      {
                        "assignments": [
                          190
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 190,
                            "mutability": "mutable",
                            "name": "userBet",
                            "nameLocation": "1768:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 258,
                            "src": "1763:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 189,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1763:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 198,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 191,
                              "name": "betsPerUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "1778:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
                              }
                            },
                            "id": 194,
                            "indexExpression": {
                              "expression": {
                                "id": 192,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1790:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1790:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1778:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                              "typeString": "mapping(enum predictionMarket.Side => uint256)"
                            }
                          },
                          "id": 197,
                          "indexExpression": {
                            "expression": {
                              "id": 195,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "1802:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Result_$48_storage",
                                "typeString": "struct predictionMarket.Result storage ref"
                              }
                            },
                            "id": 196,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "winner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44,
                            "src": "1802:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Side_$41",
                              "typeString": "enum predictionMarket.Side"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1778:38:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1763:53:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 200,
                                "name": "userBet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 190,
                                "src": "1833:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1843:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1833:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "796f7520646f206e6f74206861766520616e792077696e6e696e672062657473",
                              "id": 203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1846:34:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e959e94bdf7aa44c2d7d3ac9cde88f3583f9c698ccf2fa283f583365cc9d558b",
                                "typeString": "literal_string \"you do not have any winning bets\""
                              },
                              "value": "you do not have any winning bets"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e959e94bdf7aa44c2d7d3ac9cde88f3583f9c698ccf2fa283f583365cc9d558b",
                                "typeString": "literal_string \"you do not have any winning bets\""
                              }
                            ],
                            "id": 199,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1825:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1825:56:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 205,
                        "nodeType": "ExpressionStatement",
                        "src": "1825:56:1"
                      },
                      {
                        "assignments": [
                          208
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 208,
                            "mutability": "mutable",
                            "name": "gain",
                            "nameLocation": "1957:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 258,
                            "src": "1952:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 207,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1952:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "documentation": "@notice gains distributed proportionally to users bets",
                        "id": 222,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 209,
                            "name": "userBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "1964:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 210,
                                  "name": "bets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58,
                                  "src": "1974:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                                    "typeString": "mapping(enum predictionMarket.Side => uint256)"
                                  }
                                },
                                "id": 213,
                                "indexExpression": {
                                  "expression": {
                                    "id": 211,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51,
                                    "src": "1979:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Result_$48_storage",
                                      "typeString": "struct predictionMarket.Result storage ref"
                                    }
                                  },
                                  "id": 212,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "loser",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 47,
                                  "src": "1979:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Side_$41",
                                    "typeString": "enum predictionMarket.Side"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1974:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 214,
                                "name": "userBet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 190,
                                "src": "1995:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1974:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 216,
                                "name": "bets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "2005:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                                  "typeString": "mapping(enum predictionMarket.Side => uint256)"
                                }
                              },
                              "id": 219,
                              "indexExpression": {
                                "expression": {
                                  "id": 217,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51,
                                  "src": "2010:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Result_$48_storage",
                                    "typeString": "struct predictionMarket.Result storage ref"
                                  }
                                },
                                "id": 218,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "winner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44,
                                "src": "2010:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Side_$41",
                                  "typeString": "enum predictionMarket.Side"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2005:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1974:50:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1964:60:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1952:72:1"
                      },
                      {
                        "expression": {
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 223,
                                "name": "betsPerUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "2033:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
                                }
                              },
                              "id": 228,
                              "indexExpression": {
                                "expression": {
                                  "id": 224,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2045:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2045:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2033:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                                "typeString": "mapping(enum predictionMarket.Side => uint256)"
                              }
                            },
                            "id": 229,
                            "indexExpression": {
                              "expression": {
                                "id": 226,
                                "name": "Side",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "2057:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                                  "typeString": "type(enum predictionMarket.Side)"
                                }
                              },
                              "id": 227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "FranceWin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 39,
                              "src": "2057:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Side_$41",
                                "typeString": "enum predictionMarket.Side"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2033:39:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2075:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2033:43:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 232,
                        "nodeType": "ExpressionStatement",
                        "src": "2033:43:1"
                      },
                      {
                        "expression": {
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 233,
                                "name": "betsPerUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "2085:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
                                }
                              },
                              "id": 238,
                              "indexExpression": {
                                "expression": {
                                  "id": 234,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2097:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2097:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2085:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                                "typeString": "mapping(enum predictionMarket.Side => uint256)"
                              }
                            },
                            "id": 239,
                            "indexExpression": {
                              "expression": {
                                "id": 236,
                                "name": "Side",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "2109:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                                  "typeString": "type(enum predictionMarket.Side)"
                                }
                              },
                              "id": 237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "FranceLoose",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40,
                              "src": "2109:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Side_$41",
                                "typeString": "enum predictionMarket.Side"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2085:41:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2129:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2085:45:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 242,
                        "nodeType": "ExpressionStatement",
                        "src": "2085:45:1"
                      },
                      {
                        "assignments": [
                          244,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 244,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "2145:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 258,
                            "src": "2140:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 243,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2140:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 252,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2184:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 245,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2155:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2155:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2155:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 248,
                                "name": "gain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 208,
                                "src": "2178:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2155:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2155:32:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2139:48:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 254,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 244,
                              "src": "2204:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6661696c656420746f2073656e64204574686572",
                              "id": 255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2210:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b",
                                "typeString": "literal_string \"failed to send Ether\""
                              },
                              "value": "failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b",
                                "typeString": "literal_string \"failed to send Ether\""
                              }
                            ],
                            "id": 253,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2196:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2196:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 257,
                        "nodeType": "ExpressionStatement",
                        "src": "2196:37:1"
                      }
                    ]
                  },
                  "id": 259,
                  "nodeType": "IfStatement",
                  "src": "1438:805:1",
                  "trueBody": {
                    "id": 188,
                    "nodeType": "Block",
                    "src": "1500:248:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 153,
                                "name": "betsPerUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "1511:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
                                }
                              },
                              "id": 158,
                              "indexExpression": {
                                "expression": {
                                  "id": 154,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1523:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1523:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1511:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                                "typeString": "mapping(enum predictionMarket.Side => uint256)"
                              }
                            },
                            "id": 159,
                            "indexExpression": {
                              "expression": {
                                "id": 156,
                                "name": "Side",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1535:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                                  "typeString": "type(enum predictionMarket.Side)"
                                }
                              },
                              "id": 157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "FranceWin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 39,
                              "src": "1535:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Side_$41",
                                "typeString": "enum predictionMarket.Side"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1511:39:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1553:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1511:43:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 162,
                        "nodeType": "ExpressionStatement",
                        "src": "1511:43:1"
                      },
                      {
                        "expression": {
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 163,
                                "name": "betsPerUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "1565:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(enum predictionMarket.Side => uint256))"
                                }
                              },
                              "id": 168,
                              "indexExpression": {
                                "expression": {
                                  "id": 164,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1577:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1577:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1565:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                                "typeString": "mapping(enum predictionMarket.Side => uint256)"
                              }
                            },
                            "id": 169,
                            "indexExpression": {
                              "expression": {
                                "id": 166,
                                "name": "Side",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1589:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                                  "typeString": "type(enum predictionMarket.Side)"
                                }
                              },
                              "id": 167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "FranceLoose",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40,
                              "src": "1589:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Side_$41",
                                "typeString": "enum predictionMarket.Side"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1565:41:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1609:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1565:45:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 172,
                        "nodeType": "ExpressionStatement",
                        "src": "1565:45:1"
                      },
                      {
                        "assignments": [
                          174,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 174,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "1625:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 188,
                            "src": "1620:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 173,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1620:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 182,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1689:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 175,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1644:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1644:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1644:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 178,
                                "name": "totalDepositedbyUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116,
                                "src": "1667:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1644:44:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1644:48:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1619:73:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 184,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 174,
                              "src": "1711:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6661696c656420746f2073656e64204574686572",
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1717:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b",
                                "typeString": "literal_string \"failed to send Ether\""
                              },
                              "value": "failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e9003b71a9b25a66bbd118d4dd5bfcc2ef44f33247b132cac94b1b028175196b",
                                "typeString": "literal_string \"failed to send Ether\""
                              }
                            ],
                            "id": 183,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1703:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1703:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "1703:37:1"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "ac307773",
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimFunds",
            "nameLocation": "1074:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1084:2:1"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1096:0:1"
            },
            "scope": 298,
            "src": "1065:1183:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "2476:151:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 274,
                          "name": "marketFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "2491:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2509:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2491:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c7265616479207265706f72746564",
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2516:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ca0b7842c579c4d78e5b1bc012525bf0c6393ad7394b6d6a3b67bbec8311fab",
                          "typeString": "literal_string \"already reported\""
                        },
                        "value": "already reported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ca0b7842c579c4d78e5b1bc012525bf0c6393ad7394b6d6a3b67bbec8311fab",
                          "typeString": "literal_string \"already reported\""
                        }
                      ],
                      "id": 273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2483:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2483:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "2483:52:1"
                },
                {
                  "expression": {
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 280,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "2542:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$48_storage",
                          "typeString": "struct predictionMarket.Result storage ref"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "2542:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum predictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 283,
                      "name": "_winner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 265,
                      "src": "2558:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum predictionMarket.Side"
                      }
                    },
                    "src": "2542:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum predictionMarket.Side"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
                  "src": "2542:23:1"
                },
                {
                  "expression": {
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 286,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "2572:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$48_storage",
                          "typeString": "struct predictionMarket.Result storage ref"
                        }
                      },
                      "id": 288,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "loser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47,
                      "src": "2572:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum predictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 289,
                      "name": "_loser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "2587:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum predictionMarket.Side"
                      }
                    },
                    "src": "2572:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum predictionMarket.Side"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "2572:21:1"
                },
                {
                  "expression": {
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 292,
                      "name": "marketFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "2600:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2617:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2600:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "2600:21:1"
                }
              ]
            },
            "documentation": {
              "id": 262,
              "nodeType": "StructuredDocumentation",
              "src": "2254:150:1",
              "text": "@notice to be called only by the contract owner manually in this version\n @dev owner to be replaced by custom Chainlink Oracle in production"
            },
            "functionSelector": "4ec942b7",
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 271,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 270,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 345,
                  "src": "2466:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2466:9:1"
              }
            ],
            "name": "reportResult",
            "nameLocation": "2417:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "_winner",
                  "nameLocation": "2435:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "2430:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum predictionMarket.Side"
                  },
                  "typeName": {
                    "id": 264,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 263,
                      "name": "Side",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41,
                      "src": "2430:4:1"
                    },
                    "referencedDeclaration": 41,
                    "src": "2430:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum predictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "_loser",
                  "nameLocation": "2449:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "2444:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum predictionMarket.Side"
                  },
                  "typeName": {
                    "id": 267,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 266,
                      "name": "Side",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41,
                      "src": "2444:4:1"
                    },
                    "referencedDeclaration": 41,
                    "src": "2444:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum predictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2429:27:1"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2476:0:1"
            },
            "scope": 298,
            "src": "2408:219:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 299,
        "src": "433:2197:1",
        "usedErrors": []
      }
    ],
    "src": "35:2597:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-12-21T23:21:20.146Z",
  "devdoc": {
    "author": "Andor Szegedi",
    "custom:experimental": "This is an experimental contract.",
    "details": "reportResult to be called manually by contract owner in this version",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "reportResult(uint8,uint8)": {
        "details": "owner to be replaced by custom Chainlink Oracle in production"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "FIFA2022 Prediction (Blockchain Developer Bootcamp Final Project)",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "placeBet(uint8)": {
        "notice": "Will France win FIFA2022? Pick a side and pay more than 0 ETH"
      },
      "reportResult(uint8,uint8)": {
        "notice": "to be called only by the contract owner manually in this version"
      }
    },
    "notice": "This is a prototype of a FIFA2022 Prediction Market pool",
    "version": 1
  }
}